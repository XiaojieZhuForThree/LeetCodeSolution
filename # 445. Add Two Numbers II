package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.Deque;

import com.leetcode.api.ListNode;

public class Question445 {
	class Solution {
		public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
			Deque<ListNode> queue1 = new ArrayDeque<>(), queue2 = new ArrayDeque<>();
			while (l1 != null) {
				queue1.offer(l1);
				l1 = l1.next;
			}
			while (l2 != null) {
				queue2.offer(l2);
				l2 = l2.next;
			}
			ListNode cur = null, next = null;
			int carry = 0;
			while (!queue1.isEmpty() || !queue2.isEmpty()) {
				int val1 = queue1.isEmpty() ? 0 : queue1.pollLast().val;
				int val2 = queue2.isEmpty() ? 0 : queue2.pollLast().val;
				int sum = val1 + val2 + carry;
				int val = sum % 10;
				carry = sum / 10;
				cur = new ListNode(val);
				cur.next = next;
				next = cur;
			}
			if (carry != 0) {
				cur = new ListNode(carry);
				cur.next = next;
			}
			return cur;
		}
	}
}
