package com.leetcode.problems;

public class Question404 {
	class Solution {
		int sum = 0;

		public int sumOfLeftLeaves(TreeNode root) {
			updateSum(root, false);
			return sum;
		}

		private final void updateSum(TreeNode node, boolean isLeftLeaf) {
			if (node == null) {
				return;
			}
			if (isLeaf(node) && isLeftLeaf) {
				sum += node.val;
			}
			updateSum(node.left, true);
			updateSum(node.right, false);
		}

		private final boolean isLeaf(TreeNode node) {
			return node.left == null && node.right == null;
		}
	}
}


#include "TreeNode.h"

class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if (!root) return 0;
        if (!root->left && !root->right) return 0;
        if (root->left && !root->left->left && !root->left->right) return root->left->val + sumOfLeftLeaves(root->right);
        return sumOfLeftLeaves(root->left) + sumOfLeftLeaves(root->right);
    }
};
