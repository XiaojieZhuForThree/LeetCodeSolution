package com.leetcode.problems;

public class Question1009 {
	class Solution1 {
		public int bitwiseComplement(int N) {
			String rep = Integer.toBinaryString(N);
			int val = 0;
			for (char c : rep.toCharArray()) {
				val *= 2;
				if (c == '0') {
					val++;
				}
			}
			return val;
		}
	}

	class Solution2 {
	    public int bitwiseComplement(int N) {
	        if (N == 0) {
	            return 1;
	        }
	        return N ^ (Integer.highestOneBit(N<<1) - 1);
	    }
	}

	class Solution3 {
	    public int bitwiseComplement(int N) {
	        int M = 2;
	        while (M <= N) {
	            M <<= 1;
	        }
	        return (M - 1) ^ N;
	    }
	}
}
