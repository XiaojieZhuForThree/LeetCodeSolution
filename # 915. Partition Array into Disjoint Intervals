package com.leetcode.problems;

public class Question915 {
	class Solution {
		public int partitionDisjoint(int[] nums) {
			if (nums == null || nums.length == 0)
				return 0;
			int[] lL = new int[nums.length], rS = new int[nums.length];
			int largest = nums[0];
			for (int i = 0; i < nums.length; i++) {
				largest = Math.max(largest, nums[i]);
				lL[i] = largest;
			}
			int smallest = nums[nums.length - 1];
			for (int i = nums.length - 1; i >= 0; i--) {
				smallest = Math.min(smallest, nums[i]);
				rS[i] = smallest;
			}
			for (int i = 0; i < nums.length - 1; i++) {
				if (lL[i] <= rS[i + 1])
					return i + 1;
			}
			return nums.length;
		}
	}
}
