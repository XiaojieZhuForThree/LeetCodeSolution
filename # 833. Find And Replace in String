package com.leetcode.problems;

import java.util.HashMap;
import java.util.Map;

public class Question833 {
	class Solution {
		public String findReplaceString(String s, int[] indexes, String[] sources, String[] targets) {
			Map<Integer, String> replace = new HashMap<>();
			Map<Integer, Integer> occupied = new HashMap<>();
			for (int i = 0; i < indexes.length; i++) {
				int index = indexes[i];
				String source = sources[i];
				String target = targets[i];
				if (s.substring(index, index + source.length()).equals(source)) {
					replace.put(index, target);
					occupied.put(index, source.length());
				}
			}
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < s.length();) {
				if (replace.containsKey(i)) {
					sb.append(replace.get(i));
					i += occupied.get(i);
				} else {
					sb.append(s.charAt(i));
					i++;
				}
			}
			return sb.toString();
		}
	}
}
