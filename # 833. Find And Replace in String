package com.leetcode.problems;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Question833 {
	class Solution {
		public String findReplaceString(String s, int[] indices, String[] sources, String[] targets) {
			if (s == null || s.length() == 0)
				return s;
			int n = indices.length;
			List<Integer> seq = new ArrayList<>();
			for (int i = 0; i < n; i++)
				seq.add(i);
			Collections.sort(seq, (a, b) -> indices[a] - indices[b]);
			StringBuilder sb = new StringBuilder();
			int prev = 0;
			for (int ind : seq) {
				int start = indices[ind];
				String source = sources[ind];
				String target = targets[ind];
				sb.append(s.substring(prev, start));
				if (!s.substring(start, start + source.length()).equals(source))
					prev = start;
				else {
					sb.append(target);
					prev = start + source.length();
				}

			}
			sb.append(s.substring(prev, s.length()));
			return sb.toString();
		}
	}
}
