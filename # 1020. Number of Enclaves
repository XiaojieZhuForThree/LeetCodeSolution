#include <vector>
using namespace std;

class Solution {
public:
    vector<pair<int, int>> dirs{ {1, 0}, {-1, 0}, {0, 1}, {0, -1} };
    int numEnclaves(vector<vector<int>>& grid) {
        for (int i = 0; i < size(grid); i++) {
            for (int j = 0; j < size(grid[0]); j++) {
                if (grid[i][j] && (i == 0 || j == 0 || i == size(grid) - 1 || j == size(grid[0]) - 1)) {
                    dfs(grid, i, j);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < size(grid); i++) {
            for (int j = 0; j < size(grid[0]); j++) {
                if (grid[i][j]) ans++;
            }
        }
        return ans;
    }
private:
    void dfs(vector<vector<int>>& grid, int i, int j) {
        if (i < 0 || i >= size(grid) || j < 0 || j >= size(grid[0]) || !grid[i][j]) {
            return;
        }
        grid[i][j] = 0;
        for (auto& p : dirs) dfs(grid, i + p.first, j + p.second);
    }
};
