/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
        Set<Integer> set = new HashSet<>();
        for (int i : to_delete) {
            set.add(i);
        }
        Set<TreeNode> roots = new HashSet<>();
        roots.add(root);
        helper(root, set, roots);
        List<TreeNode> ans = new ArrayList<>();
        for (TreeNode node : roots) {
            ans.add(node);
        }
        return ans;
    }

    private void helper(TreeNode root, Set<Integer> set, Set<TreeNode> roots) {
        if (root == null) return;
        helper(root.left, set, roots);
        helper(root.right, set, roots);
        if (root.left != null && set.contains(root.left.val)) {
            root.left = null;
        }
        if (root.right != null && set.contains(root.right.val)) {
            root.right = null;
        }
        if (set.contains(root.val)) {
            roots.remove(root);
            if (root.left != null) {
                roots.add(root.left);
            }
            if (root.right != null) {
                roots.add(root.right);
            }
        }
    }
}
