package com.leetcode.problems;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.leetcode.api.TreeNode;

public class Question1110 {
	class Solution {
		List<TreeNode> ans = new ArrayList<>();

		public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
			Set<Integer> set = new HashSet<>();
			for (int i : to_delete) {
				set.add(i);
			}
			TreeNode head = dfs(root, set);
			if (head != null) {
				ans.add(head);
			}
			return ans;
		}

		private TreeNode dfs(TreeNode node, Set<Integer> set) {
			if (node == null) {
				return null;
			}
			if (set.contains(node.val)) {
				TreeNode l = dfs(node.left, set);
				TreeNode r = dfs(node.right, set);
				if (l != null) {
					ans.add(l);
				}
				if (r != null) {
					ans.add(r);
				}
				node.left = null;
				node.right = null;
				return null;
			}
			node.left = dfs(node.left, set);
			node.right = dfs(node.right, set);
			return node;
		}
	}
}
