package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.List;
import java.util.Queue;

import com.leetcode.model.TreeNode;

public class Question102 {
	class Solution {
		public List<List<Integer>> levelOrder(TreeNode root) {
			List<List<Integer>> ans = new ArrayList<>();
			Queue<TreeNode> queue = new ArrayDeque<>();

			if (root != null)
				queue.offer(root);

			while (!queue.isEmpty()) {
				List<Integer> list = new ArrayList<>();
				for (int i = queue.size(); i > 0; i--) {
					TreeNode node = queue.poll();
					list.add(node.val);
					if (node.left != null)
						queue.offer(node.left);
					if (node.right != null)
						queue.offer(node.right);
				}
				ans.add(list);
			}
			return ans;
		}
	}
}
