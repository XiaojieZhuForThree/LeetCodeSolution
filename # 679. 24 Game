class Solution {
    public boolean judgePoint24(int[] nums) {
        double[] test = new double[nums.length];
        for (int i = 0; i < nums.length; i++) {
            test[i] = (double)nums[i];
        }
        return dfs(test);
    }
    private boolean dfs(double[] nums) {
        if (nums.length == 1) {
            return Math.abs(nums[0] - 24) < 0.001;
        }
        boolean ans = false;
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < nums.length; j++) {
                if (i != j) {
                    double[] next = new double[nums.length-1];
                    int x = 0;
                    for (int m = 0; m < nums.length; m++) {
                        if (m != i && m != j) {
                            next[x++] = nums[m];
                        }
                    }
                    next[x] = nums[i] + nums[j];
                    ans |= dfs(next);
                    next[x] = nums[i] - nums[j];
                    ans |= dfs(next);
                    next[x] = nums[i] * nums[j];
                    ans |= dfs(next);
                    if (nums[j] != 0) {
                        next[x] = nums[i] / nums[j];
                        ans |= dfs(next);
                    }
                }
            }
        }
        return ans;
    }
}
