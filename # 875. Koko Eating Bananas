class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int l = 1, r = getMax(piles);
        while (l < r) {
            int m = l + (r - l) / 2;
            if (getTime(piles, m) > h) l = m + 1;
            else r = m;
        }
        return l;
    }
    private int getMax(int[] piles) {
        int ans = 0;
        for (int i : piles) ans = Math.max(ans, i);
        return ans;
    }
    private int getTime(int[] piles, int m) {
        int ans = 0;
        for (int i : piles) {
            ans += i / m;
            if (i % m != 0) ans += 1;
        }
        return ans;
    }
}
