package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

import com.leetcode.api.Master;

public class Question843 {
	class Solution {
		public void findSecretWord(String[] wordlist, Master master) {
			Random rand = ThreadLocalRandom.current();
			List<String> list = new ArrayList<>();
			for (String s : wordlist) {
				list.add(s);
			}
			for (int i = 0; i < 10; i++) {
				String s = list.get(rand.nextInt(list.size()));
				int val = master.guess(s);
				int diff = 6 - val;
				List<String> nextList = new ArrayList<>();
				for (String next : list) {
					if (wordDiff(next, s) == diff) {
						nextList.add(next);
					}
				}
				list = nextList;
			}
			return;
		}

		private int wordDiff(String a, String b) {
			int diff = 0;
			for (int i = 0; i < 6; i++) {
				if (a.charAt(i) != b.charAt(i)) {
					diff++;
				}
			}
			return diff;
		}
	}
}
