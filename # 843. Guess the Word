package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

import com.leetcode.api.Master;

public class Question843 {

	class Solution {
	    public void findSecretWord(String[] wordlist, Master master) {
	        Random rand = ThreadLocalRandom.current();
	        List<String> cur = new ArrayList<>();
	        for (String s : wordlist) {
	            cur.add(s);
	        }
	        for (int i = 0; i < 10; i++) {
	            String cand = cur.get(rand.nextInt(cur.size()));
	            int sim = master.guess(cand);
	            if (sim == 6) {
	                return;
	            }
	            List<String> next = new ArrayList<>();
	            for (String s : cur) {
	                if (!s.equals(cand) && diff(s, cand) == sim) {
	                    next.add(s);
	                }
	            }
	            cur = next;
	        }
	        return;
	    }
	    private int diff(String a, String b) {
	        int ans = 0;
	        for (int i = 0; i < 6; i++) {
	            if (a.charAt(i) == b.charAt(i)) {
	                ans++;
	            }
	        }
	        return ans;
	    }
	}
}
