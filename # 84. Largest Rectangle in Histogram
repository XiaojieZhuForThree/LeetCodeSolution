package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.Deque;

public class Question84 {
	class Solution {
		public int largestRectangleArea(int[] heights) {
			Deque<Integer> st = new ArrayDeque<>();
			st.offerLast(-1);
			int maxArea = 0;
			for (int i = 0; i < heights.length; i++) {
				while (st.peekLast() != -1 && heights[st.peekLast()] >= heights[i]) {
					int h = heights[st.pollLast()];
					int w = i - st.peekLast() - 1;
					maxArea = Math.max(maxArea, h * w);
				}
				st.offerLast(i);
			}

			while (st.peekLast() != -1) {
				int h = heights[st.pollLast()];
				int w = heights.length - st.peekLast() - 1;
				maxArea = Math.max(maxArea, h * w);
			}
			return maxArea;
		}
	}
}
