#include <string>
#include <vector>
#include <unordered_set>

using std::vector;
using std::string;

class Solution {
public:
    string findDifferentBinaryString(vector<string>& nums) {
        std::unordered_set<string> s(nums.begin(), nums.end());
        int n = size(nums[0]);
        int i = 0;
        while (s.count(getS(i, n))) i++;
        return getS(i, n);
    }
private:
    string getS(int i, int n) {
        string ans = "";
        while (i > 0) {
            ans.push_back(i % 2 == 1 ? '1' : '0');
            i /= 2;
        }
        for (int j = size(ans); j < n; j++) ans += '0';
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
