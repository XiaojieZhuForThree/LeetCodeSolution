package com.leetcode.problems;

import java.util.Arrays;

public class Question881 {
	class Solution {
		public int numRescueBoats(int[] people, int limit) {
			int boats = 1;
			Arrays.sort(people);
			int space = limit;
			int left = 0, right = people.length - 1;
			while (left < right) {
				space -= people[right];
				if (left < right && space >= people[left]) {
					space -= people[left++];
				}
				if (left == right) {
					break;
				}
				right--;
				boats++;
				space = limit;
			}
			return boats;
		}
	}
}


#include <algorithm>
#include <vector>
using namespace std;

class Solution {
public:
	int numRescueBoats(vector<int>& people, int limit) {
		sort(people.begin(), people.end());
		int l = 0, r = size(people) - 1;
		int ans = 0;
		while (l <= r) {
			if (people[l] + people[r] <= limit) l++;
			r--;
			ans++;
		}
		return ans;
	}
};
