package com.leetcode.problems;

public class Question1283 {
	class Solution {
		public int smallestDivisor(int[] nums, int threshold) {
			int max = 0;
			for (int i : nums) {
				max = Math.max(max, i);
			}
			int left = 1, right = max;
			while (left < right) {
				int mid = left + (right - left) / 2;
				if (getDivSum(nums, mid) > threshold) {
					left = mid + 1;
				} else {
					right = mid;
				}
			}
			return left;
		}

		private int getDivSum(int[] nums, int div) {
			int sum = 0;
			for (int i : nums) {
				if (i % div == 0) {
					sum += i / div;
				} else {
					sum += 1 + i / div;
				}
			}
			return sum;
		}
	}
}
