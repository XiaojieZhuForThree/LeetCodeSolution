package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Deque;
import java.util.List;

import com.leetcode.api.ListNode;

public class Question1019 {

	class Solution {
		public int[] nextLargerNodes(ListNode head) {
			List<Integer> vals = new ArrayList<>();
			while (head != null) {
				vals.add(head.val);
				head = head.next;
			}
			int[] ans = new int[vals.size()];
			Deque<Integer> stack = new ArrayDeque<>();
			for (int i = vals.size() - 1; i >= 0; i--) {
				while (!stack.isEmpty() && stack.peekLast() <= vals.get(i)) {
					stack.pollLast();
				}
				if (stack.isEmpty()) {
					ans[i] = 0;
				} else {
					ans[i] = stack.peekLast();
				}
				stack.offerLast(vals.get(i));
			}
			return ans;
		}
	}
}
