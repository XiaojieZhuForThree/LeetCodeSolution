package com.leetcode.problems;

public class Question41 {
	class Solution {
		public int firstMissingPositive(int[] nums) {
			processNums(nums);
			return getFirstMissingPositive(nums);
		}

		private final void processNums(int[] nums) {
			changeInvalidValues(nums);
			markNums(nums);
		}

		private final void changeInvalidValues(int[] nums) {
			int n = nums.length;
			for (int i = 0; i < n; i++) {
				int num = nums[i];
				if (num <= 0 || num > n) {
					nums[i] = n + 1;
				}
			}
		}

		private final void markNums(int[] nums) {
			int n = nums.length;
			for (int i : nums) {
				i = Math.abs(i);
				if (i > n) {
					continue;
				}
				if (nums[i - 1] > 0) {
					nums[i - 1] = -nums[i - 1];
				}
			}
		}

		private final int getFirstMissingPositive(int[] nums) {
			int n = nums.length;
			for (int i = 0; i < n; i++) {
				if (nums[i] > 0) {
					return i + 1;
				}
			}
			return n + 1;
		}
	}
}
