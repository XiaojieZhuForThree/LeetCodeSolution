/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>(new Comparator<ListNode>(){
            public int compare(ListNode o1, ListNode o2){
                return o1.val - o2.val;
            }
        });
        for (ListNode list : lists) {
            if (list != null) {
                pq.add(list);
            }
        }
        ListNode head = new ListNode(0);
        ListNode dummy = head;
        while (!pq.isEmpty()) {
            dummy.next = pq.poll();
            dummy = dummy.next;
            if (dummy.next != null) {
                pq.add(dummy.next);
            }
        }
        return head.next;
    }
}
