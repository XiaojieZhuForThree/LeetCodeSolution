#include <climits>
#include "TreeNode.h"
#include <utility>

using namespace std;

class Solution {
	int ans = INT_MAX;
public:
	int minDiffInBST(TreeNode* root) {
		dfs(root);
		return ans;
	}
private:
	pair<int, int> dfs(TreeNode* node) {
		if (!node) return {};
		if (!node->left && !node->right) return { node->val, node->val };
		int l = node->val, r = node->val;
		if (node->left) {
			pair<int, int> vals = dfs(node->left);
			ans = min(ans, abs(node->val - vals.second));
			l = vals.first;
		}
		if (node->right) {
			pair<int, int> vals = dfs(node->right);
			ans = min(ans, abs(node->val - vals.first));
			r = vals.second;
		}
		return { l, r };
	}
};
