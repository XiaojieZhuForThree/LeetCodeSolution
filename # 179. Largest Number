import java.util.*;

class Solution {
	public String largestNumber(int[] nums) {
		PriorityQueue<String> pq = new PriorityQueue<>(new Comparator<String>() {
			public int compare(String arg0, String arg1) {
				boolean change = false;
				if (arg0.length() > arg1.length()) {
					String tmp = arg0;
					arg0 = arg1;
					arg1 = tmp;
					change = true;
				}
				for (int i = 0; i < arg1.length(); i++) {
					if (i < arg0.length()) {
						if (arg0.charAt(i) != arg1.charAt(i)) {
							if (change == true) {
								return -(arg1.charAt(i) - arg0.charAt(i));
							} else {
								return arg1.charAt(i) - arg0.charAt(i);
							}
						}
					} else {
						for (int j = 0; j < arg0.length(); j++) {
							if (arg0.charAt(j) != arg1.charAt(i)) {
								if (change == true) {
									return -(arg1.charAt(i) - arg0.charAt(j));
								} else {
									return arg1.charAt(i) - arg0.charAt(j);
								}
							}
						}
					}
				}
				return 0;
			}
		});
		for (int i : nums) {
			pq.add(Integer.toString(i));
		}
		StringBuilder sb = new StringBuilder();
		while (!pq.isEmpty()) {
			sb.append(pq.remove());
		}
		if (sb.length() > 0 && sb.charAt(0) == '0') {
			return new String("0");
		}
		return sb.toString();
	}
}
