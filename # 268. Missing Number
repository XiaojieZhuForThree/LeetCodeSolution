package com.leetcode.problems;

public class Question268 {
	class Solution {
		public int missingNumber(int[] nums) {
			int sum1 = 0, sum2 = 0;
			for (int i = 0; i < nums.length; i++) {
				sum1 += i;
				sum2 += nums[i];
			}
			sum1 += nums.length;
			return sum1 - sum2;
		}
	}
}


from typing import List


class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        n = len(nums)
        total = self._GetTotal(n)
        return total - sum(nums)
    
    def _GetTotal(self, n: int) -> int:
        return (n + 1) * n // 2


#include <vector>

using std::vector;

class Solution {
public:
	int missingNumber(vector<int>& nums) {
		int a = 0, b = 0;
		for (int i = 0; i <= size(nums); i++) {
			if (i == size(nums)) b += i;
			else {
				a += nums[i];
				b += i;
			}
		}
		return b - a;
	}
};
