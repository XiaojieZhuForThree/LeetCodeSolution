package problems;

public class Question1160 {
	class Solution {
		public int countCharacters(String[] words, String chars) {
			int[] counts = new int[26];
			for (char c : chars.toCharArray()) {
				counts[c - 'a']++;
			}
			int ans = 0;
			for (String word : words) {
				if (canForm(word, counts.clone())) {
					ans += word.length();
				}
			}
			return ans;
		}

		private boolean canForm(String word, int[] counts) {
			for (char c : word.toCharArray()) {
				if (counts[c - 'a'] <= 0) {
					return false;
				}
				counts[c - 'a']--;
			}
			return true;
		}
	}
}


#include <string>
#include <vector>
#include <unordered_map>
using std::string;
using std::vector;

class Solution {
public:
    int countCharacters(vector<string>& words, string chars) {
        std::unordered_map<char, int> m;
        int ans = 0;
        for (char c : chars) m[c]++;
        for (string& w : words) {
            std::unordered_map<char, int> mw;
            for (char c : w) mw[c]++;
            bool good = true;
            for (auto& p : mw) {
                if (!m.count(p.first) || m[p.first] < p.second) {
                    good = false;
                    break;
                }
            }
            if (good) ans += size(w);
        }
        return ans;
    }
};
