package com.leetcode.problems;

import com.leetcode.model.TreeNode;

public class Question236 {
	class Solution {
		TreeNode ans = null;

		public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
			dfs(root, p, q);
			return ans;
		}

		private boolean[] dfs(TreeNode node, TreeNode p, TreeNode q) {
			if (node == null)
				return new boolean[2];
			boolean[] left = dfs(node.left, p, q), right = dfs(node.right, p, q);
			boolean[] rec = new boolean[2];
			rec[0] = left[0] || right[0] || node.val == p.val;
			rec[1] = left[1] || right[1] || node.val == q.val;
			if (rec[0] && rec[1] && ans == null)
				ans = node;
			return rec;
		}
	}
}
