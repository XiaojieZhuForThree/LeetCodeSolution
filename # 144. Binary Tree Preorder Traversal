/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
    	List<Integer> ans = new ArrayList<>();
    	Stack<TreeNode> seen = new Stack<>();
    	TreeNode node = root;
    	while (!seen.isEmpty() || node != null) {
    		if (node != null) {
        		ans.add(node.val);
        		seen.push(node);
        		node = node.left;    			
    		}
    		else {
    			node = seen.pop().right;
    		}
    	}
    	return ans;
    }
}

///////////////////////////////////////////////////////////////////////

class Solution {
	List<Integer> ans = new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
        getAns(root);
        return ans;
    }
    private void getAns(TreeNode root){
    	if (root == null) {
    		return;
    	}
    	ans.add(root.val);
    	getAns(root.left);
    	getAns(root.right);
    }
}
