#include <vector>
using std::vector;

class Solution {
public:
    int paintWalls(vector<int>& cost, vector<int>& time) {
        int n = cost.size();
        vector<vector<int>> dp(n + 1, vector<int>(n + 1, 1e9));
        for (int i = 0; i <= n; i++) {
            dp[i][0] = 0;
        }
        for (int i = 1; i <= n; i++) {
            for (int wallLeft = 1; wallLeft <= n; wallLeft++) {
                int notTake = dp[i - 1][wallLeft];
                int take = cost[i - 1] + dp[i - 1][std::max(wallLeft - 1 - time[i - 1], 0)];
                dp[i][wallLeft] = std::min(take, notTake);
            }
        }
        return dp[n][n];
    }
};
