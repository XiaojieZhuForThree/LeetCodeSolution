class Solution {
	int ans = 0;
	private void helper(int n, int i, int size, Set<Integer> no) {
		for (int j = 0; j < n; j++) {
			if (!no.contains(i*10 + j)) {
				size ++;
				if (size == n) {
					ans++;
					size--;
					return;
				} else {
					Set<Integer> next = new HashSet<>(no);
					for (int m = i + 1; m < n; m++) {
						next.add(m*10 + j);
					}
					int k = j - 1, x = j + 1, l = i + 1, y = i + 1;
					while (k >= 0 && l < n) {
						next.add(l*10 + k);
						k--;
						l++;
					}
					while (x < n && y < n) {
						next.add(y*10 + x);
						x++;
						y++;
					}
					helper(n, i + 1, size, next);
					size--;
				}
			}
		}
	}

	public int totalNQueens(int n) {
		helper(n, 0, 0, new HashSet<Integer>());
		return ans;
	}
}
