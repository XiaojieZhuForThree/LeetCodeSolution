package problems;

public class Question1105 {
	class Solution {
		public int minHeightShelves(int[][] books, int shelf_width) {
			int[] dp = new int[books.length + 1];
			for (int i = 1; i <= books.length; i++) {
				int w = books[i - 1][0], h = books[i - 1][1];
				dp[i] = dp[i - 1] + h;
				for (int j = i - 1; j > 0 && books[j - 1][0] + w <= shelf_width; j--) {
					h = Math.max(h, books[j - 1][1]);
					w += books[j - 1][0];
					dp[i] = Math.min(dp[j - 1] + h, dp[i]);
				}
			}
			return dp[books.length];
		}
	}
}


#include <vector>
using std::vector;

class Solution {
public:
    int minHeightShelves(vector<vector<int>>& books, int shelfWidth) {
        vector<int> dp;
        dp.push_back(0);
        for (int i = 1; i <= size(books); i++) {
            int j = i;
            int cur = 0, h = 0, val = INT_MAX;
            while (j > 0 && books[j - 1][0] + cur <= shelfWidth) {
                cur += books[j - 1][0];
                h = std::max(h, books[j - 1][1]);
                j--;
                val = std::min(val, h + dp[j]);
            }
            dp.push_back(val);
        }
        return dp[size(books)];
    }
};
