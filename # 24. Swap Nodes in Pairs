package com.leetcode.problems;

import com.leetcode.api.ListNode;

public class Question24 {
	class Solution {
		public ListNode swapPairs(ListNode head) {
			if (head == null || head.next == null) {
				return head;
			}
			ListNode init = new ListNode(0);
			init.next = head;
			ListNode prev = init, node1 = head, node2 = head.next;
			while (node1 != null && node2 != null) {
				swap(prev, node1, node2, node2.next);
				if (node1.next == null || node1.next.next == null) {
					break;
				}
				prev = node1;
				node1 = node1.next;
				node2 = node1.next;
			}
			return init.next;
		}

		private void swap(ListNode prev, ListNode node1, ListNode node2, ListNode node3) {
			prev.next = node2;
			node2.next = node1;
			node1.next = node3;
			return;
		}
	}
}
