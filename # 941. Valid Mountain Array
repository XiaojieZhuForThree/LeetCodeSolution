package com.leetcode.problems;

public class Question941 {
	class Solution {
		public boolean validMountainArray(int[] arr) {
			if (arr == null || arr.length < 3) {
				return false;
			}
			boolean hasUp = false, hasDown = false;
			for (int i = 1; i < arr.length; i++) {
				if (arr[i] > arr[i - 1]) {
					if (hasDown) {
						return false;
					}
					hasUp = true;
				} else if (arr[i] < arr[i - 1]) {
					if (!hasUp) {
						return false;
					}
					hasDown = true;
				} else {
					return false;
				}
			}
			return hasUp && hasDown;
		}
	}
}


class Solution:
    def validMountainArray(self, arr: List[int]) -> bool:
        if len(arr) < 3: 
            return False
        for i in range(1, len(arr)):
            if arr[i] == arr[i - 1]: 
                return False
            elif arr[i] < arr[i - 1]:
                return i - 1 > 0 and self.isDescreasing(arr, i - 1)
        return False
    
    def isDescreasing(self, arr: List[int], i: int):
        for j in range(i + 1, len(arr)):
            if arr[j] >= arr[j - 1]:
                return False
        return True
        
