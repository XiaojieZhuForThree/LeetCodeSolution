package com.leetcode.problems;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Question853 {
	class Solution {
		public int carFleet(int target, int[] position, int[] speed) {
			if (position == null || position.length == 0)
				return 0;
			int n = position.length;
			List<Integer> indices = new ArrayList<>();
			for (int i = 0; i < n; i++)
				indices.add(i);
			Collections.sort(indices, (a, b) -> Integer.compare(target - position[a], target - position[b]));
			double slowest = 1.0 * (target - position[indices.get(0)]) / speed[indices.get(0)];
			int ans = n;
			for (int i = 1; i < n; i++) {
				double time = 1.0 * (target - position[indices.get(i)]) / speed[indices.get(i)];
				if (time <= slowest)
					ans--;
				else
					slowest = time;
			}
			return ans;
		}
	}
}
