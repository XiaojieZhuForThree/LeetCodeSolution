package com.leetcode.problems;


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Question853 {
	class Solution {
		public int carFleet(int target, int[] position, int[] speed) {
			if (position == null || position.length == 0)
				return 0;
			for (int i = 0; i < position.length; i++)
				position[i] = target - position[i];
			List<Integer> list = new ArrayList<>();
			for (int i = 0; i < position.length; i++)
				list.add(i);
			Collections.sort(list, (a, b) -> position[a] - position[b]);
			int ans = position.length;
			double slowest = (position[list.get(0)] * 1.0) / speed[list.get(0)];
			for (int i = 1; i < list.size(); i++) {
				double time = (position[list.get(i)] * 1.0) / speed[list.get(i)];
				if (time <= slowest)
					ans--;
				else
					slowest = time;
			}
			return ans;
		}
	}
}
