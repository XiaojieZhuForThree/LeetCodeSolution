package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.Deque;

public class Question1472 {
	class BrowserHistory {
		Deque<String> stack;
		Deque<String> queue;
		String url;

		public BrowserHistory(String homepage) {
			stack = new ArrayDeque<>();
			queue = new ArrayDeque<>();
			url = homepage;
		}

		public void visit(String url) {
			stack.offerLast(this.url);
			this.url = url;
			queue.clear();
		}

		public String back(int steps) {
			while (!stack.isEmpty() && steps > 0) {
				queue.offerFirst(url);
				url = stack.pollLast();
				steps--;
			}
			return url;
		}

		public String forward(int steps) {
			while (!queue.isEmpty() && steps > 0) {
				stack.offerLast(url);
				url = queue.pollFirst();
				steps--;
			}
			return url;
		}
	}

	/**
	 * Your BrowserHistory object will be instantiated and called as such:
	 * BrowserHistory obj = new BrowserHistory(homepage); obj.visit(url); String
	 * param_2 = obj.back(steps); String param_3 = obj.forward(steps);
	 */
}


#include <deque>
#include <string>
using namespace std;

class BrowserHistory {
    deque<string> bk, ft;
    string cur;
public:
    BrowserHistory(string homepage) {
        cur = homepage;
    }

    void visit(string url) {
        bk.push_back(cur);
        cur = url;
        ft.clear();
    }

    string back(int steps) {
        for (int i = steps; i > 0; i--) {
            if (bk.empty()) break;
            ft.push_front(cur);
            cur = bk.back();
            bk.pop_back();
        }
        return cur;
    }

    string forward(int steps) {
        for (int i = steps; i > 0; i--) {
            if (ft.empty()) break;
            bk.push_back(cur);
            cur = ft.front();
            ft.pop_front();
        }
        return cur;
    }
};

/**
 * Your BrowserHistory object will be instantiated and called as such:
 * BrowserHistory* obj = new BrowserHistory(homepage);
 * obj->visit(url);
 * string param_2 = obj->back(steps);
 * string param_3 = obj->forward(steps);
 */
