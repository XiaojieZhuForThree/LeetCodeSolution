package com.leetcode.problems;

public class Question978 {
	class Solution {
		public int maxTurbulenceSize(int[] arr) {
			if (arr == null || arr.length == 0)
				return 0;
			int n = arr.length;
			int[] ups = new int[n], downs = new int[n];
			int ans = 1;
			ups[0] = 1;
			downs[0] = 1;
			for (int i = 1; i < n; i++) {
				if (arr[i] > arr[i - 1]) {
					ups[i] = downs[i - 1] + 1;
					downs[i] = 1;
				} else if (arr[i] < arr[i - 1]) {
					downs[i] = ups[i - 1] + 1;
					ups[i] = 1;
				} else {
					ups[i] = 1;
					downs[i] = 1;
				}
				ans = Math.max(ans, Math.max(ups[i], downs[i]));
			}
			return ans;
		}
	}
}
