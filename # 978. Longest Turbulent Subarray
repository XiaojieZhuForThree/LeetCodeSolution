class Solution {
    public int maxTurbulenceSize(int[] A) {
        if (A == null || A.length == 0) {
            return 0;
        }
        int[] ups = new int[A.length];
        int[] downs = new int[A.length];
        int ans = 1;
        ups[0] = 1;
        downs[0] = 1;
        for (int i = 1; i < A.length; i++) {
            if (A[i] > A[i-1]) {
                ups[i] = downs[i-1] + 1;
                downs[i] = 1;
            } else if (A[i] < A[i-1]) {
                downs[i] = ups[i-1] + 1;
                ups[i] = 1;
            } else if (A[i] == A[i-1]) {
                ups[i] = 1;
                downs[i] = 1;
            }
            ans = Math.max(ans, Math.max(ups[i], downs[i]));
        }
        return ans;
    }
}
