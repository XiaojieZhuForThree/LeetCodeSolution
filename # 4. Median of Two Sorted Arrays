```
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
```

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if (nums1 == null && nums2 == null) {
            return null;
        } else if (nums1.length == 0 && nums2.length == 0) {
            return null;
        } else if (nums1 == null || nums1.length == 0) {
            return nums2.length % 2 == 0 ? (double)(nums2[nums2.length / 2] + nums2[nums2.length / 2 + 1])/2 : (double)nums2[nums2.length / 2];
        } else if (nums2 == null || nums2.length == 0) {
            return nums1.length % 2 == 0 ? (double)(nums1[nums1.length / 2] + nums1[nums1.length / 2 + 1])/2 : (double)nums1[nums1.length / 2];
        }
        double ans = 0;
        if (nums1.length < nums2.length) {
            int[] temp = nums1;
            nums1 = nums2;
            nums2 = temp;
        }
        int total = nums1.length + nums2.length;
        int start = 0, end = nums1.length;
        int mid = (start + end) / 2;
        
    }
}
