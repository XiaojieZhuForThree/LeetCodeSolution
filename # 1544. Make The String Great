#include <string>
#include <deque>
using namespace std;

class Solution {
public:
    string makeGood(string s) {
        deque<char> stack;
        for (char c : s) {
            if (!stack.empty() && abs(stack.back() - c) == 32) stack.pop_back();
            else stack.push_back(c);
        }
        return string(stack.begin(), stack.end());
    }
};


#include <string>
#include <deque>

using std::string;

class Solution {
public:
    string makeGood(string s) {
        std::deque<char> q;
        for (char c : s) {
            if (!q.empty() && tolower(q.back()) == tolower(c) && q.back() != c) q.pop_back();
            else q.push_back(c);
        }
        string ans;
        for (char c : q) ans += c;
        return ans;
    }
};
