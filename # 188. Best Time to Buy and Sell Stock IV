class Solution {
	int ans = 0;
	Map<Integer, Integer> map = new HashMap<>();

	public int maxProfit(int k, int[] prices) {
		for (int i = prices.length-2; i >= 0; i--){
            rec(k, prices, i);
        }
		return ans;
	}

	private int rec(int k, int[] prices, int i) {
		if (map.containsKey(i)) {
			ans = Math.max(ans, map.get(i));
			return map.get(i);
		}
		if (i >= prices.length-1) {
			return 0;
		}
		int profit = 0;
		for (int j = i + 1; j < prices.length; j++) {
			if (prices[j] > prices[i] && k > 0) {
				profit = Math.max(profit, prices[j] - prices[i] + rec(k - 1, prices, j+1));
				ans = Math.max(ans, profit);
			}
		}
		map.put(i, profit);
		return map.get(i);
	}
}
