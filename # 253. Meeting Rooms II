class Solution {
	public int minMeetingRooms(Interval[] intervals) {
		int ans = intervals.length;
		if (ans == 0) return 0;
		List<Interval> available = new ArrayList<Interval>();
		available.add(new Interval(intervals[0].end, Integer.MAX_VALUE));
		available.add(new Interval(Integer.MIN_VALUE, intervals[0].start));		
		for (int i = 1; i < intervals.length; i++) {
			int j = 0;
			for (; j < available.size(); j++){
				Interval slot = available.get(j);
				if (intervals[i].start >= slot.start && intervals[i].end <= slot.end) {
					ans--;
					available.remove(j);
					available.add(new Interval(slot.start, intervals[i].start));
					available.add(new Interval(intervals[i].end, slot.end));
					break;
				}				
			}
			if (j == available.size()){
			available.add(new Interval(intervals[i].end, Integer.MAX_VALUE));
			available.add(new Interval(Integer.MIN_VALUE, intervals[i].start));
			}
		}
		return ans;
	}
}
