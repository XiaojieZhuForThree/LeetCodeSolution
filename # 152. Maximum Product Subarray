package com.leetcode.problems;

public class Question152 {
	class Solution {
		public int maxProduct(int[] nums) {
			if (nums == null || nums.length == 0) {
				return 0;
			}
			if (nums.length == 1) {
				return nums[0];
			}
			return getMaxProduct(nums);
		}

		private final int getMaxProduct(int[] nums) {
			int largestPos = 0, smallestNeg = 0, max = 0;
			for (int i : nums) {
				if (i == 0) {
					largestPos = 0;
					smallestNeg = 0;
				} else if (i > 0) {
					largestPos = largestPos == 0 ? i : i * largestPos;
					smallestNeg *= i;
				} else {
					int nextSmallestNeg = smallestNeg;
					nextSmallestNeg = largestPos == 0 ? i : i * largestPos;
					largestPos = smallestNeg * i;
					smallestNeg = nextSmallestNeg;
				}
				max = Math.max(max, largestPos);
			}
			return max;
		}
	}
}
