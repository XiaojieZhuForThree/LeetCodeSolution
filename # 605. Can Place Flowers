class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        if (flowerbed == null || flowerbed.length == 0) return false;
        int cnt = 0;
        for (int i = 0; i < flowerbed.length; i++) {
            if (flowerbed[i] == 1) continue;
            if (i - 1 >= 0 && flowerbed[i - 1] == 1 || i + 1 < flowerbed.length && flowerbed[i + 1] == 1) continue;
            else {
                cnt++;
                flowerbed[i] = 1;
            }
        }
        return cnt >= n;
    }
}


#include <vector>
using namespace std;

class Solution {
public:
	bool canPlaceFlowers(vector<int>& flowerbed, int n) {
		for (int i = 0; i < size(flowerbed); i++) {
			if (flowerbed[i] == 1) continue;
			else if ((i == 0 || flowerbed[i - 1] == 0) && (i == size(flowerbed) - 1 || flowerbed[i + 1] == 0)) {
				flowerbed[i] = 1;
				n--;
			}
		}
		return n <= 0;
	}
};
