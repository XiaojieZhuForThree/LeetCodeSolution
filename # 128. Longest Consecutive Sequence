package com.leetcode.problems;

import java.util.HashSet;
import java.util.Set;

public class Question128 {
	class Solution {
		public int longestConsecutive(int[] nums) {
			if (nums == null || nums.length == 0)
				return 0;
			Set<Integer> set = new HashSet<>();
			for (int i : nums)
				set.add(i);
			int ans = 1;
			for (int i : nums) {
				if (!set.remove(i))
					continue;
				int cur = 1;
				int val = i - 1;
				while (set.remove(val)) {
					cur++;
					val--;
				}
				val = i + 1;
				while (set.remove(val)) {
					cur++;
					val++;
				}
				ans = Math.max(ans, cur);
			}
			return ans;
		}
	}
}


from typing import List


class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        s = set(nums)
        ans = 0
        for i in nums:
            if i - 1 not in s:
                cur = i
                cand = 1
                while cur + 1 in s:
                    cur += 1
                    cand += 1
                ans = max(ans, cand)
        return ans
