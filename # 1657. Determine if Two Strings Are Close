package com.leetcode.problems;

public class Question1657 {
	class Solution {
		public boolean closeStrings(String word1, String word2) {
			if (word1.length() != word2.length()) {
				return false;
			}
			int[] chars1 = new int[26];
			int[] chars2 = new int[26];
			for (int i = 0; i < word1.length(); i++) {
				chars1[word1.charAt(i) - 'a']++;
				chars2[word2.charAt(i) - 'a']++;
			}
			for (int i = 0; i < 26; i++) {
				if (chars1[i] == chars2[i]) {
					continue;
				}
				if (chars1[i] == 0 || chars2[i] == 0) {
					return false;
				}
				boolean canSwap = false;
				for (int j = i + 1; j < 26; j++) {
					if (chars1[j] == chars2[i]) {
						chars1[j] = chars1[i];
						chars1[i] = chars2[i];
						canSwap = true;
						break;
					}
				}
				if (!canSwap) {
					return false;
				}
				continue;
			}
			return true;
		}
	}
}
