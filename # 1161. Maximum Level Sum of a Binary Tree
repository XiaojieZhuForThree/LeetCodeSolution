package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.Queue;

public class Question1161 {
	/**
	 * Definition for a binary tree node. public class TreeNode { int val; TreeNode
	 * left; TreeNode right; TreeNode() {} TreeNode(int val) { this.val = val; }
	 * TreeNode(int val, TreeNode left, TreeNode right) { this.val = val; this.left
	 * = left; this.right = right; } }
	 */
	class Solution {
		public int maxLevelSum(TreeNode root) {
			int level = 0;
			int sum = Integer.MIN_VALUE;
			int curLevel = 0;
			Queue<TreeNode> queue = new ArrayDeque<>();
			queue.offer(root);
			while (!queue.isEmpty()) {
				curLevel++;
				int val = 0;
				for (int i = queue.size(); i > 0; i--) {
					TreeNode node = queue.poll();
					val += node.val;
					if (node.left != null) {
						queue.offer(node.left);
					}
					if (node.right != null) {
						queue.offer(node.right);
					}
				}
				if (val > sum) {
					level = curLevel;
					sum = val;
				}
			}
			return level;
		}
	}
}
