package com.leetcode.problems;

import java.util.Arrays;

public class Question354 {
	class Solution {
		public int maxEnvelopes(int[][] envelopes) {
			Arrays.sort(envelopes, (a, b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);
			int[] dp = new int[envelopes.length];
			Arrays.fill(dp, 1);
			int ans = 1;
			for (int i = 1; i < dp.length; i++) {
				for (int j = 0; j < i; j++) {
					if (envelopes[j][0] < envelopes[i][0] && envelopes[j][1] < envelopes[i][1]) {
						dp[i] = Math.max(dp[i], dp[j] + 1);
					}
				}
				ans = Math.max(ans, dp[i]);
			}
			return ans;
		}
	}
}
