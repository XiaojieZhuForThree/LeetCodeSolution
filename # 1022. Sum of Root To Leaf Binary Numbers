package com.leetcode.problems;

public class Question1022 {
	class Solution1 {
	    int sum = 0;
	    public int sumRootToLeaf(TreeNode root) {
	        dfs(root);
	        return sum;
	    }
	    private final void dfs(TreeNode node) {
	        if (node == null) {
	            return;
	        }
	        if (node.left == null && node.right == null) {
	            sum += node.val;
	            return;
	        }
	        if (node.left != null) {
	            node.left.val += node.val * 2;
	            dfs(node.left);
	        }
	        if (node.right != null) {
	            node.right.val += node.val * 2;
	            dfs(node.right);
	        }
	    }
	}

	class Solution2 {
		public int sumRootToLeaf(TreeNode root) {
			return dfs(root, 0);
		}

		private int dfs(TreeNode root, int val) {
			if (root == null) {
				return 0;
			}
			val = val * 2 + root.val;
			if (root.left == null && root.right == null) {
				return val;
			}
			return dfs(root.left, val) + dfs(root.right, val);
		}
	}
}
