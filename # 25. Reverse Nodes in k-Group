/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
	public ListNode reverseKGroup(ListNode head, int k) {
		if (k == 1) {
			return head;
		}
		int count = 0;
		ListNode node = head;
		while (count < k-1) {
			if (node == null) {
				return head;
			}
			else {
				node = node.next;
				count++;				
			}

		}
		if (node == null) {
			return head;
		}
		ListNode next = node.next;
		node.next = null;
		ListNode newhead = swap(head);
		ListNode trav = newhead;
		while (trav.next != null) {
			trav = trav.next;
		}
		trav.next = reverseKGroup(next, k);
		return newhead;
	}
	private ListNode swap(ListNode head) {
		ListNode node = head;
		ListNode next = node.next;
		ListNode prev = node;
		while (next != null) {
			prev.next = next.next;
			next.next = node;
			node = next;
			next = prev.next;
		}
		return node;
	}
}
