package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;

import com.leetcode.model.ListNode;

public class Question25 {
	class Solution {
		public ListNode reverseKGroup(ListNode head, int k) {
			if (head == null)
				return head;
			List<ListNode> list = new ArrayList<>();
			ListNode dummy = head;
			while (dummy != null) {
				list.add(dummy);
				dummy = dummy.next;
			}
			for (int i = 0; i + k - 1 < list.size(); i += k) {
				reverse(list, i, i + k - 1);
			}
			ListNode node = list.get(0);
			dummy = node;
			for (int i = 1; i < list.size(); i++) {
				dummy.next = list.get(i);
				dummy = dummy.next;
			}
			dummy.next = null;
			return node;
		}

		private void reverse(List<ListNode> list, int l, int r) {
			while (l < r) {
				ListNode temp = list.get(r);
				list.set(r, list.get(l));
				list.set(l, temp);
				l++;
				r--;
			}
			return;
		}
	}
}
