class Solution {
    public boolean isMonotonic(int[] A) {
        boolean asc = false, des = false;
        for (int i = 0; i < A.length-1; i++) {
        	if (A[i] < A[i+1]) {
        		if (des == true) {
        			return false;
        		}
        		else if (asc == false) {
        			asc = true;
        		}
        	}
        	else if (A[i] > A[i+1]) {
        		if (asc == true) {
        			return false;
        		}
        		else if (des == false) {
        			des = true;
        		}
        	}
        }
        return true;
    }
}

#include <vector>
using std::vector;

class Solution {
public:
	bool isMonotonic(vector<int>& nums) {
		if (size(nums) < 3) return true;
		return monos(nums) || monol(nums);
	}
private:
	bool monos(vector<int>& nums) {
		int val = nums[0];
		for (int i = 1; i < size(nums); i++) {
			if (nums[i] > val) return false;
			val = nums[i];
		}
		return true;
	}

	bool monol(vector<int>& nums) {
		int val = nums[0];
		for (int i = 1; i < size(nums); i++) {
			if (nums[i] < val) return false;
			val = nums[i];
		}
		return true;
	}
};
