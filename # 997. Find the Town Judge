package problems;

public class Question997 {
	class Solution {
		public int findJudge(int N, int[][] trust) {
			int[] checked = new int[N + 1], trusted = new int[N + 1];
			for (int[] t : trust) {
				trusted[t[1]]++;
				checked[t[0]] = 1;
			}
			for (int i = 1; i <= N; i++) {
				if (trusted[i] == N - 1 && checked[i] == 0) {
					return i;
				}
			}
			return -1;
		}
	}
}


#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        unordered_map<int, int> trusted, trustee;
        for (int i = 1; i <= n; i++) {
            trusted[i] = 0;
            trustee[i] = 0;
        }
        for (auto& t : trust) {
            trusted[t[0]]++;
            trustee[t[1]]++;
        }
        for (auto& e : trusted) {
            if (e.second == 0 && trustee[e.first] == n - 1) return e.first;
        }
        return -1;
    }
};
