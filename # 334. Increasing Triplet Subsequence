package com.leetcode.problems;

public class Question334 {
	class Solution {
		public boolean increasingTriplet(int[] nums) {
			int[] smallest = new int[nums.length];
			int curSmall = nums[0];
			for (int i = 1; i < nums.length; i++) {
				smallest[i] = curSmall;
				curSmall = Math.min(curSmall, nums[i]);
			}
			int curLarge = nums[nums.length - 1];
			for (int i = nums.length - 2; i >= 1; i--) {
				if (smallest[i] < nums[i] && nums[i] < curLarge) {
					return true;
				}
				curLarge = Math.max(curLarge, nums[i]);
			}
			return false;
		}
	}
}


#include <vector>
using namespace std;

class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        if (nums.size() < 3) return false;
        int s = nums[0], m = nums[0], cur = 1;
        for (int i = 1; i < nums.size(); i++) {
            int c = nums[i];
            if (c > m) {
                m = c;
                cur++;
                if (cur == 3) return true;
            }
            else if (c <= s) {
                s = c;
            }
            else {
                m = c;
                if (m > s) cur = 2;
            }
        }
        return false;
    }
};
