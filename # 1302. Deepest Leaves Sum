package com.leetcode.problems;

import com.leetcode.api.TreeNode;

public class Question1302 {
	class Solution {
		private int depth = 0, ans = 0;

		public int deepestLeavesSum(TreeNode root) {
			dfs(root, 0);
			sumLeave(root, 0);
			return ans;
		}

		private void dfs(TreeNode node, int cur) {
			if (node == null) {
				return;
			}
			if (node.left == null && node.right == null) {
				depth = Math.max(depth, cur);
			}
			dfs(node.left, cur + 1);
			dfs(node.right, cur + 1);
		}

		private void sumLeave(TreeNode node, int dep) {
			if (node == null) {
				return;
			}
			if (dep == depth) {
				ans += node.val;
				return;
			}
			sumLeave(node.left, dep + 1);
			sumLeave(node.right, dep + 1);
		}
	}
}
