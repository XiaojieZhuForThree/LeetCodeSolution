
public class Question968 {
	/**
	 * Definition for a binary tree node. public class TreeNode { int val; TreeNode
	 * left; TreeNode right; TreeNode() {} TreeNode(int val) { this.val = val; }
	 * TreeNode(int val, TreeNode left, TreeNode right) { this.val = val; this.left
	 * = left; this.right = right; } }
	 */
	class Solution {
		int ans = 0;

		public int minCameraCover(TreeNode root) {
			if (dfs(root) == 1) {
				ans++;
			}
			return ans;
		}

		// 0 -> no need, 1 -> no cam, 2 -> has cam
		private int dfs(TreeNode node) {
			if (node == null) {
				return 0;
			}
			int left = dfs(node.left), right = dfs(node.right);
			if (left == 1 || right == 1) {
				ans++;
				return 2;
			} else if (left == 2 || right == 2) {
				return 0;
			}
			return 1;
		}
	}
}
