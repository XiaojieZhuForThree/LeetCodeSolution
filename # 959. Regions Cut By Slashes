package problems;

public class Question959 {
	class Solution {
		int[][] dirs = new int[][] { { 1, 0 }, { -1, 0 }, { 0, 1 }, { 0, -1 } };

		public int regionsBySlashes(String[] grid) {
			int n = grid.length, ans = 0;
			int[][] g = new int[n * 3][n * 3];
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (grid[i].charAt(j) == '/') {
						g[i * 3][j * 3 + 2] = 1;
						g[i * 3 + 1][j * 3 + 1] = 1;
						g[i * 3 + 2][j * 3] = 1;
					} else if (grid[i].charAt(j) == '\\') {
						g[i * 3][j * 3] = 1;
						g[i * 3 + 1][j * 3 + 1] = 1;
						g[i * 3 + 2][j * 3 + 2] = 1;
					}
				}
			}
			for (int i = 0; i < n * 3; i++) {
				for (int j = 0; j < n * 3; j++) {
					if (g[i][j] == 0) {
						ans++;
						dfs(g, i, j);
					}
				}
			}
			return ans;
		}

		private void dfs(int[][] g, int i, int j) {
			if (i < 0 || i >= g.length || j < 0 || j >= g.length || g[i][j] == 1) {
				return;
			}
			g[i][j] = 1;
			for (int[] dir : dirs) {
				int ni = i + dir[0], nj = j + dir[1];
				dfs(g, ni, nj);
			}
		}
	}
}
