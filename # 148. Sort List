/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        return helper(head);
    }
    
    private ListNode helper(ListNode head){
        //basic case
        if(head==null||head.next==null) return head;
        
        ListNode fast = head;
        ListNode slow = head;
        ListNode pre = slow;
        
        while(fast!=null&&fast.next!=null){
            pre = slow;
            slow=slow.next;
            fast = fast.next.next;
        }
        pre.next = null;
        
        ListNode one = helper(head);
        ListNode two = helper(slow);
        
        return combine(one,two);
    }
    
    ListNode combine(ListNode one, ListNode two){
        ListNode head = new ListNode(0);
        ListNode temp = head;
        while(one!=null&&two!=null){
            if(one.val<two.val){
                temp.next = one;
                one = one.next;
                temp = temp.next;
            }
            else{
                temp.next = two;
                temp = temp.next;
                two=two.next;
            }
        }
        if(one==null) temp.next = two;
        if(two==null) temp.next = one;
        return head.next;
    }
    
}
