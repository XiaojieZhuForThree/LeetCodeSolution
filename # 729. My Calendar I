package com.leetcode.problems;

import java.util.TreeMap;

public class Question729 {
	class MyCalendar {
		TreeMap<Integer, Integer> map;

		public MyCalendar() {
			this.map = new TreeMap<>();
		}

		public boolean book(int start, int end) {
			Integer lower = map.floorKey(start), higher = map.lowerKey(end);
			if (lower != null && map.get(lower) > start)
				return false;
			if (higher != null && higher >= start)
				return false;
			map.put(start, end);
			return true;
		}
	}

	/**
	 * Your MyCalendar object will be instantiated and called as such: MyCalendar
	 * obj = new MyCalendar(); boolean param_1 = obj.book(start,end);
	 */
}


#include <vector>
using std::vector;

class MyCalendar {
public:
    vector<std::pair<int, int>> v;
    MyCalendar() {

    }

    bool book(int start, int end) {
        for (auto& p : v) {
            if (!(p.second <= start || end <= p.first)) return false;
        }
        v.push_back({ start, end });
        return true;
    }
};

/**
 * Your MyCalendar object will be instantiated and called as such:
 * MyCalendar* obj = new MyCalendar();
 * bool param_1 = obj->book(start,end);
 */
