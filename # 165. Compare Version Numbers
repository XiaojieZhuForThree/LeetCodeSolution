class Solution {
    public int compareVersion(String version1, String version2) {
        int pos1 = 0, pos2 = 0;
        int dotPos1, dotPos2, v1, v2;
        while (pos1 < version1.length() && pos2 < version2.length()){
            dotPos1 = version1.indexOf('.', pos1);
            dotPos2 = version2.indexOf('.', pos2);
            dotPos1 = (dotPos1 == -1) ? version1.length() : dotPos1;
            dotPos2 = (dotPos2 == -1) ? version2.length() : dotPos2;
            v1 = Integer.parseInt(version1.substring(pos1, dotPos1));
            v2 = Integer.parseInt(version2.substring(pos2, dotPos2));
            if (v1 < v2){
                return -1;
            } else if (v1 > v2){
                return 1;
            } else {
                pos1 = ++dotPos1;
                pos2 = ++dotPos2;
            }
        }
        while (pos1 < version1.length()){
            dotPos1 = version1.indexOf('.', pos1);
            dotPos1 = (dotPos1 == -1) ? version1.length() : dotPos1;
            v1 = Integer.parseInt(version1.substring(pos1, dotPos1));
            if (v1 > 0){
                return 1;
            }
            pos1 = ++dotPos1;
        }
        while (pos2 < version2.length()){
            dotPos2 = version2.indexOf('.', pos2);
            dotPos2 = (dotPos2 == -1) ? version2.length() : dotPos2;
            v2 = Integer.parseInt(version2.substring(pos2, dotPos2));
            if (v2 > 0){
                return -1;
            }
            pos2 = ++dotPos2;
        }
        return 0;
    }
}
