/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if (head == null) return null;
        ListNode slow = head, fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (fast == slow) return getCycle(head, fast);
        }
        return null;
    }
    
    private ListNode getCycle(ListNode head, ListNode fast) {
        while (head != fast) {
            head = head.next;
            fast = fast.next;
        }
        return head;
    }
}
