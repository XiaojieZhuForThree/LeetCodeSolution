package com.leetcode.problems;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Question791 {
	class Solution {
		public String customSortString(String order, String str) {
			if (order == null || order.length() == 0)
				return str;
			if (str == null || str.length() == 0)
				return str;
			Map<Character, Integer> map = new HashMap<>();
			for (int i = 0; i < order.length(); i++)
				map.put(order.charAt(i), i);
			List<Character> list = new ArrayList<>();
			for (char c : str.toCharArray())
				list.add(c);
			Collections.sort(list, (a, b) -> map.getOrDefault(a, 26) - map.getOrDefault(b, 26));
			StringBuilder sb = new StringBuilder();
			for (char c : list)
				sb.append(c);
			return sb.toString();
		}
	}
}


#include <string>
#include <unordered_map>
#include <algorithm>

using std::string;

class Solution {
public:
	string customSortString(string order, string s) {
		int o = 0;
		std::unordered_map<char, int> m;
		for (char c : order) {
			m[c] = o++;
		}
		std::sort(s.begin(), s.end(), [&m](char a, char b) {
			int ao = 27, bo = 27;
			if (m.count(a)) ao = m[a];
			if (m.count(b)) bo = m[b];
			return ao < bo;
			});
		return s;
	}
};
