class Solution {
    public int numIslands(char[][] grid) {
    	int ans = 0;
        for (int i = 0; i < grid.length; i ++) {
        	for (int j = 0; j < grid[0].length; j ++) {
        		if (grid[i][j] == '1'){
                    grid[i][j] = '0';
        			ans ++;
        			findAll(grid, i, j);
        		}
        	}
        }
        return ans;
    }
    private void findAll(char[][] grid, int i, int j) {
    	if (i >= 0 && j >= 0 && i < grid.length && j < grid[0].length) {
        	if (j < grid[0].length-1 && grid[i][j+1] == '1') {
        		grid[i][j+1] = '0';
        		findAll(grid, i, j+1);
        	}
        	if (i < grid.length-1 && grid[i+1][j] == '1') {
        		grid[i+1][j] = '0';
        		findAll(grid, i+1, j);
            }
        	if (j >= 1 && grid[i][j-1] == '1') {
        		grid[i][j-1] = '0';
        		findAll(grid, i, j-1);
        	}
        	if (i >= 1 && grid[i-1][j] == '1') {
        		grid[i-1][j] = '0';
        		findAll(grid, i-1, j);
        	}
    	}
    }
}
