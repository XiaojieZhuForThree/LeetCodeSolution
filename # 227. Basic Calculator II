package com.leetcode.problems;

public class Question227 {
	class Solution {
		public int calculate(String s) {
			s = s.replaceAll(" ", "");
			return helper(s, 0, false);
		}

		private int helper(String s, int i, boolean isReversed) {
			int num1 = 0, num2 = 0;
			for (; i < s.length(); i++) {
				if (Character.isDigit(s.charAt(i))) {
					num1 = num1 * 10 + (s.charAt(i) - '0');
				} else {
					if (s.charAt(i) == '+') {
						if (isReversed) {
							return num1 - helper(s, i + 1, false);
						} else {
							return num1 + helper(s, i + 1, false);
						}
					} else if (s.charAt(i) == '-') {
						if (isReversed) {
							return num1 + helper(s, i + 1, true);
						} else {
							return num1 - helper(s, i + 1, true);
						}
					} else if (s.charAt(i) == '*') {
						int j = i + 1;
						for (; j < s.length(); j++) {
							if (Character.isDigit(s.charAt(j))) {
								num2 = num2 * 10 + (s.charAt(j) - '0');
							} else {
								break;
							}
						}
						num1 *= num2;
						num2 = 0;
						i = j - 1;
					} else {
						int j = i + 1;
						for (; j < s.length(); j++) {
							if (Character.isDigit(s.charAt(j))) {
								num2 = num2 * 10 + (s.charAt(j) - '0');
							} else {
								break;
							}
						}
						num1 /= num2;
						num2 = 0;
						i = j - 1;
					}
				}
			}
			return num1;
		}
	}
}
