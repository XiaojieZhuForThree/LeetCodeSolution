package com.leetcode.problems;

public class Question938 {
	class Solution {
		int sum = 0;

		public int rangeSumBST(TreeNode root, int low, int high) {
			helper(root, low, high);
			return sum;
		}

		private void helper(TreeNode node, int low, int high) {
			if (node == null) {
				return;
			}
			if (node.val <= high && node.val >= low) {
				sum += node.val;
				helper(node.left, low, high);
				helper(node.right, low, high);
			} else if (node.val < low) {
				helper(node.right, low, high);
			} else {
				helper(node.left, low, high);
			}
		}
	}
}


#include "TreeNode.h"
class Solution {
public:
	int rangeSumBST(TreeNode* root, int low, int high) {
		if (!root) return 0;
		int val = root->val;
		if (val > high) return rangeSumBST(root->left, low, high);
		else if (val < low) return rangeSumBST(root->right, low, high);
		return val + rangeSumBST(root->left, low, high) + rangeSumBST(root->right, low, high);
	}
};
