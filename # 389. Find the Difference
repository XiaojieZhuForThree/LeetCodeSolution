package com.leetcode.problems;

public class Question389 {
	class Solution1 {
		public char findTheDifference(String s, String t) {
			int[] chars = new int[26];
			for (char c : s.toCharArray()) {
				chars[c - 'a']++;
			}
			for (char c : t.toCharArray()) {
				chars[c - 'a']--;
				if (chars[c - 'a'] < 0) {
					return c;
				}
			}
			return 'a';
		}
	}

	class Solution2 {
		public char findTheDifference(String s, String t) {
			char ans = 0;
			int i = 0;
			for (; i < t.length() - 1; i++) {
				ans ^= s.charAt(i);
				ans ^= t.charAt(i);
			}
			ans ^= t.charAt(i);
			return ans;
		}
	}
}


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        s = sorted(s)
        t = sorted(t)
        for i in range(len(s)):
            if s[i] != t[i]:
                return t[i]
        return t[-1]
	
	
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        a, b = Counter(s), Counter(t)
        for k in b:
            if b[k] != a[k]:
                return k
        return None



#include <string>
using std::string;

class Solution {
public:
	char findTheDifference(string s, string t) {
		int a = 0, b = 0;
		for (char c : s) a += (c - 'a');
		for (char c : t) b += (c - 'a');
		return char('a' + b - a);
	}
};
