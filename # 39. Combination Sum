class Solution {
	Set<List<Integer>> set = new HashSet<>();

	private void dynamic(int[] candidates, int target, List<Integer> combo) {
		if (target == 0) {
			Collections.sort(combo);
			set.add(combo);
			return;
		} else if (target < 0) {
			return;
		} else {
			for (int i : candidates) {
				int sub = target - i;
				List<Integer> next = new ArrayList<>(combo);
				next.add(i);
				dynamic(candidates, sub, next);
			}
		}
	}

	public List<List<Integer>> combinationSum(int[] candidates, int target) {
		dynamic(candidates, target, new ArrayList<Integer>());
		return new ArrayList<List<Integer>>(set);
	}

}
