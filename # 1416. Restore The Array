package problems;

public class Question1416 {
	class Solution {
		public int numberOfArrays(String s, int k) {
			int[] dp = new int[s.length() + 1];
			dp[s.length()] = 1;
			for (int i = s.length() - 1; i >= 0; i--) {
				if (s.charAt(i) == '0') {
					continue;
				}
				long cur = 0;
				for (int j = i; j < s.length(); j++) {
					cur *= 10;
					cur += (s.charAt(j) - '0');
					if (cur <= 0 || cur > k) {
						break;
					}
					dp[i] += dp[j + 1];
					dp[i] %= (1e9 + 7);
				}
			}
			return dp[0];
		}
	}
}


#include <string>
#include <unordered_map>
using namespace std;

class Solution {
public:
	unordered_map<int, long long> dp;
	int numberOfArrays(string s, int k) {
		return dfs(s, 0, k);
	}
private:
	long long dfs(string& s, int i, int k) {
		if (i >= size(s)) return 1;
		if (s[i] == '0') return 0;
		if (dp.count(i)) return dp[i];
		long long cur = 0, ans = 0;
		for (int j = i; j < size(s); j++) {
			cur *= 10;
			cur += (s[j] - '0');
			if (cur > k) break;
			ans += dfs(s, j + 1, k);
			ans %= 1000000007;
		}
		dp[i] = ans;
		return ans;
	}
};
