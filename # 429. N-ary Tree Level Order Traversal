package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.List;
import java.util.Queue;

import com.leetcode.model.Node;

public class Question429 {
	class Solution {
		public List<List<Integer>> levelOrder(Node root) {
			List<List<Integer>> list = new ArrayList<>();
			if (root == null)
				return list;
			Node dummy = root;
			Queue<Node> level = new ArrayDeque<>();
			level.offer(dummy);
			while (!level.isEmpty()) {
				List<Integer> cur = new ArrayList<>();
				for (int i = level.size(); i > 0; i--) {
					Node node = level.poll();
					cur.add(node.val);
					if (node.children == null || node.children.isEmpty())
						continue;
					for (Node child : node.children) {
						if (child != null)
							level.add(child);
					}
				}
				list.add(cur);
			}
			return list;
		}
	}
}
