package com.leetcode.problems;

public class Question1663 {
	class Solution {
		public String getSmallestString(int n, int k) {
			int[] container = new int[n];
			k -= n;
			int ptr = n - 1;
			while (k > 0) {
				container[ptr]++;
				k--;
				if (container[ptr] == 25) {
					ptr--;
				}
			}
			StringBuilder sb = new StringBuilder();
			for (int i : container) {
				sb.append((char) ('a' + i));
			}
			return sb.toString();
		}
	}
}


class Solution:
    def getSmallestString(self, n: int, k: int) -> str:
        ans = ['a'] * n
        ptr = n - 1
        cur = k - n
        while cur > 0:
            added = min(cur, 25)
            ans[ptr] = chr(ord(ans[ptr]) + added)
            cur -= added
            ptr -= 1
        return ''.join(ans)
