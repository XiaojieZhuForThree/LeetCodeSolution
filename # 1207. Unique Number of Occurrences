package com.leetcode.problems;

public class Question1207 {
	class Solution {
		public boolean uniqueOccurrences(int[] arr) {
			int n = arr.length;
			int[] bucket = new int[2001];
			for (int i : arr) {
				bucket[i + 1000]++;
			}
			boolean[] seen = new boolean[n];
			for (int i : bucket) {
				if (i != 0 && seen[i]) {
					return false;
				}
				seen[i] = true;
			}
			return true;
		}
	}
}


#include <vector>
#include <unordered_set>
using namespace std;

class Solution {
public:
	bool uniqueOccurrences(vector<int>& arr) {
		vector<int> occurrences(2001, 0);
		unordered_set<int> seen;
		for (int i : arr) occurrences[i + 1000]++;
		for (int i : occurrences) {
			if (i == 0) continue;
			if (seen.count(i)) return false;
			seen.insert(i);
		}
		return true;
	}
};
