class Solution {
    public int orderOfLargestPlusSign(int N, int[][] mines) {
        int[][] matrix = new int[N][N];
        for (int[] i : mines) {
            matrix[i[0]][i[1]] = 1;
        }
        int[][]ups = new int[N+2][N+2];
        int[][]downs = new int[N+2][N+2];
        int[][]lefts = new int[N+2][N+2];
        int[][]rights = new int[N+2][N+2];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (matrix[i][j] == 1) {
                    ups[i+1][j+1] = 0;
                    downs[i+1][j+1] = 0;
                    lefts[i+1][j+1] = 0;
                    rights[i+1][j+1] = 0;
                } else {
                    ups[i+1][j+1] = ups[i][j+1] + 1;
                    lefts[i+1][j+1] = lefts[i+1][j] + 1;
                }
            }
        }
        for (int i = N-1; i >= 0; i--) {
            for (int j = N-1; j >= 0; j--) {
                if (matrix[i][j] == 1) {
                    ups[i+1][j+1] = 0;
                    downs[i+1][j+1] = 0;
                    lefts[i+1][j+1] = 0;
                    rights[i+1][j+1] = 0;
                } else {
                    downs[i+1][j+1] = downs[i+2][j+1] + 1;
                    rights[i+1][j+1] = rights[i+1][j+2] + 1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                ans = Math.max(ans, Math.min(Math.min(ups[i+1][j+1], downs[i+1][j+1]), Math.min(lefts[i+1][j+1], rights[i+1][j+1])));
            }
        }
        return ans;
    }
}
