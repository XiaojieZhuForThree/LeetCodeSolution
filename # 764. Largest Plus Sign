package com.leetcode.problems;

public class Question764 {
	class Solution {
		public int orderOfLargestPlusSign(int n, int[][] mines) {
			if (n <= 0)
				return 0;
			int[][] mat = new int[n][n];
			for (int[] mine : mines)
				mat[mine[0]][mine[1]] = 1;
			int[][] left = new int[n][n], right = new int[n][n], up = new int[n][n], down = new int[n][n];
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (mat[i][j] == 1)
						continue;
					left[i][j] = 1 + (j > 0 ? left[i][j - 1] : 0);
					up[i][j] = 1 + (i > 0 ? up[i - 1][j] : 0);
				}
			}
			for (int i = n - 1; i >= 0; i--) {
				for (int j = n - 1; j >= 0; j--) {
					if (mat[i][j] == 1)
						continue;
					right[i][j] = 1 + (j < n - 1 ? right[i][j + 1] : 0);
					down[i][j] = 1 + (i < n - 1 ? down[i + 1][j] : 0);
				}
			}
			int ans = 0;
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					ans = Math.max(ans, Math.min(Math.min(up[i][j], down[i][j]), Math.min(left[i][j], right[i][j])));
				}
			}
			return ans;
		}
	}
}
