package com.leetcode.problems;

public class Question1463 {
	class Solution {
		public int cherryPickup(int[][] grid) {
			if (grid.length == 0 || grid[0].length == 0)
				return 0;
			int[][][] dp = new int[grid.length][grid[0].length][grid[0].length];
			for (int row = grid.length - 1; row >= 0; row--) {
				for (int col = 0; col < grid[0].length; col++) {
					for (int col2 = 0; col2 < grid[0].length; col2++) {
						if (col == col2) {
							dp[row][col][col2] = grid[row][col];
						} else {
							dp[row][col][col2] += grid[row][col];
							dp[row][col][col2] += grid[row][col2];
						}
						if (row < grid.length - 1) {
							int tmp = 0;
							int lCol1 = Math.max(0, col - 1);
							int rCol1 = Math.min(col + 1, grid[0].length - 1);
							int lCol2 = Math.max(0, col2 - 1);
							int rCol2 = Math.min(col2 + 1, grid[0].length - 1);
							for (int i = lCol1; i <= rCol1; i++) {
								for (int j = lCol2; j <= rCol2; j++) {
									if (dp[row + 1][i][j] > tmp)
										tmp = dp[row + 1][i][j];
								}
							}

							dp[row][col][col2] += tmp;
						}
					}
				}
			}
			return dp[0][0][grid[0].length - 1];
		}
	}
}
