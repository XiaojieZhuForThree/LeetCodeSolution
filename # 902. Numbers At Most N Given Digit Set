package com.leetcode.problems;

public class Question902 {
	class Solution {
		public int atMostNGivenDigitSet(String[] digits, int n) {
			String num = String.valueOf(n);
			int val = getMax(digits, num);
			for (int i = 1; i < num.length(); i++) {
				val += getAllForSize(digits, i);
			}
			return val;
		}

		private int getMax(String[] digits, String num) {
			if (num == null || num.length() == 0) {
				return 0;
			}
			if (num.length() == 1) {
				int val = 0;
				for (String dig : digits) {
					if (dig.compareTo(num) <= 0) {
						val++;
					}
				}
				return val;
			}
			String sigDig = num.substring(0, 1);
			int val = 0;
			for (String dig : digits) {
				if (dig.compareTo(sigDig) > 0) {
					continue;
				} else if (dig.compareTo(sigDig) == 0) {
					val += getMax(digits, num.substring(1));
				} else {
					val += getAllForSize(digits, num.length() - 1);
				}
			}
			return val;
		}

		private int getAllForSize(String[] digits, int size) {
			int val = 1;
			for (int i = 0; i < size; i++) {
				val *= digits.length;
			}
			return val;
		}
	}
}
