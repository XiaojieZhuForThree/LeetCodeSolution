#include "TreeNode.h"
#include <vector>
using namespace std;

class Solution {
public:
	vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {
		vector<int> ans;
		helper(target, 0, k, ans);
		dfs(root, target, k, ans);
		return ans;
	}
private:
	void helper(TreeNode* target, int d, int k, vector<int>& ans) {
		if (!target) return;
		if (d == k) ans.push_back(target->val);
		helper(target->left, d + 1, k, ans);
		helper(target->right, d + 1, k, ans);
	}
private:
	int dfs(TreeNode* node, TreeNode* target, int k, vector<int>& ans) {
		if (!node) return INT_MAX;
		if (node == target) return 0;
		int l = dfs(node->left, target, k, ans);
		int r = dfs(node->right, target, k, ans);
		if (l == INT_MAX && r == INT_MAX) return INT_MAX;
		else if (l != INT_MAX) {
			if (l + 1 == k) ans.push_back(node->val);
			helper(node->right, l + 2, k, ans);
			return l + 1;
		}
		else {
			if (r + 1 == k) ans.push_back(node->val);
			helper(node->left, r + 2, k, ans);
			return r + 1;
		}
	}
};
