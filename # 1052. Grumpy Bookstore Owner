package problems;

public class Question1052 {
	class Solution1 {
		public int maxSatisfied(int[] customers, int[] grumpy, int X) {
			int val = 0, n = customers.length;
			for (int i = 0; i < n; i++) {
				if (i < X || grumpy[i] == 0) {
					val += customers[i];
				}
			}
			int max = val;
			for (int i = 1; i <= n - X; i++) {
				int newVal = val;
				if (grumpy[i - 1] == 1) {
					newVal -= customers[i - 1];
				}
				if (grumpy[i + X - 1] == 1) {
					newVal += customers[i + X - 1];
				}
				max = Math.max(max, newVal);
				val = newVal;
			}
			return max;
		}
	}

	class Solution2 {
		public int maxSatisfied(int[] customers, int[] grumpy, int X) {
			int sat = 0, unsatWin = 0, maxMakeSat = 0;
			for (int i = 0; i < customers.length; i++) {
				if (grumpy[i] == 0) {
					sat += customers[i];
				} else {
					unsatWin += customers[i];
				}
				if (i >= X) {
					if (grumpy[i - X] == 1) {
						unsatWin -= customers[i - X];
					}
				}
				maxMakeSat = Math.max(maxMakeSat, unsatWin);
			}
			return sat + maxMakeSat;
		}
	}
}
