package com.leetcode.problems;

import java.util.Random;
import java.util.TreeMap;

public class Question497 {
	class Solution {
		TreeMap<Integer, Integer> map;
		int[][] rs;
		int sum = 0;
		Random rand = new Random();

		public Solution(int[][] rects) {
			map = new TreeMap<>();
			rs = rects;
			for (int i = 0; i < rs.length; i++) {
				map.put(sum, i);
				sum += (rs[i][2] - rs[i][0] + 1) * (rs[i][3] - rs[i][1] + 1);
			}
		}

		public int[] pick() {
			int rd = rand.nextInt(sum), k = map.floorKey(rd), r[] = rs[map.get(k)], diff = rd - k, w = r[2] - r[0] + 1;
			return new int[] { r[0] + diff % w, r[1] + diff / w };
		}
	}
}
