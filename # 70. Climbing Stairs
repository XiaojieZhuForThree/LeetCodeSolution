package com.leetcode.problems;

public class Question70 {
	class Solution {
		public int climbStairs(int n) {
			if (n == 1 || n == 2)
				return n;
			int[] dp = new int[n];
			dp[0] = 1;
			dp[1] = 2;
			for (int i = 3; i <= n; i++) {
				dp[i - 1] = dp[i - 2] + dp[i - 3];
			}
			return dp[n - 1];
		}
	}
}


class Solution {
public:
	int climbStairs(int n) {
		int prev1 = 1, prev2 = 1;
		for (int i = 2; i <= n; i++) {
			int cur = prev1 + prev2;
			prev2 = prev1;
			prev1 = cur;
		}
		return prev1;
	}
};
