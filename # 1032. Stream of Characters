package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;

public class Question1032 {
	
	class StreamChecker {
		private class TrieNode {
			TrieNode[] nextChar;
			boolean isLastChar;

			public TrieNode() {
				nextChar = new TrieNode[26];
				isLastChar = false;
			}
		}

		private TrieNode root;
		private List<Character> prevQuery;

		public StreamChecker(String[] words) {
			root = new TrieNode();
			prevQuery = new ArrayList<>();
			for (String word : words) {
				insert(word);
			}
		}

		private final void insert(String word) {
			TrieNode node = root;
			for (int i = word.length() - 1; i >= 0; i--) {
				char c = word.charAt(i);
				if (node.nextChar[c - 'a'] == null) {
					node.nextChar[c - 'a'] = new TrieNode();
				}
				node = node.nextChar[c - 'a'];
			}
			node.isLastChar = true;
		}

		public boolean query(char letter) {
			prevQuery.add(letter);
			return canGetWord();
		}

		private final boolean canGetWord() {
			TrieNode node = root;
			for (int i = prevQuery.size() - 1; i >= 0; i--) {
				char c = prevQuery.get(i);
				if (node.nextChar[c - 'a'] == null) {
					return false;
				}
				TrieNode nextNode = node.nextChar[c - 'a'];
				if (nextNode.isLastChar) {
					return true;
				}
				node = nextNode;
			}
			return false;
		}
	}

	/**
	 * Your StreamChecker object will be instantiated and called as such:
	 * StreamChecker obj = new StreamChecker(words); boolean param_1 =
	 * obj.query(letter);
	 */
}
