package com.leetcode.problems;

import com.leetcode.api.TreeNode;

public class Question538 {
	class Solution {
		public TreeNode convertBST(TreeNode root) {
			if (root == null) {
				return root;
			}
			if (root.left == null && root.right == null) {
				return root;
			}
			if (root.right != null) {
				convertBST(root.right);
				TreeNode node = getLeft(root.right);
				root.val += node.val;
			}
			if (root.left != null) {
				TreeNode node = getRight(root.left);
				node.val += root.val;
				convertBST(root.left);
			}
			return root;
		}

		private TreeNode getLeft(TreeNode node) {
			while (node.left != null) {
				node = node.left;
			}
			return node;
		}

		private TreeNode getRight(TreeNode node) {
			while (node.right != null) {
				node = node.right;
			}
			return node;
		}
	}
}
