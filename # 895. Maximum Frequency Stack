package com.leetcode.problems;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.HashMap;
import java.util.Map;

public class Question895 {
	class FreqStack {
		Map<Integer, Deque<Integer>> freqStacks;
		Map<Integer, Integer> freqMap;
		int curFreq;

		public FreqStack() {
			freqStacks = new HashMap<>();
			freqMap = new HashMap<>();
			curFreq = 0;
		}

		public void push(int x) {
			int freq = freqMap.getOrDefault(x, 0) + 1;
			freqStacks.putIfAbsent(freq, new ArrayDeque<>());
			freqStacks.get(freq).offer(x);
			curFreq = Math.max(curFreq, freq);
			freqMap.put(x, freq);
		}

		public int pop() {
			int ans = freqStacks.get(curFreq).pollLast();
			if (freqStacks.get(curFreq).isEmpty()) {
				freqStacks.remove(curFreq);
				curFreq--;
			}
			freqMap.put(ans, freqMap.getOrDefault(ans, 1) - 1);
			return ans;
		}
	}

	/**
	 * Your FreqStack object will be instantiated and called as such: FreqStack obj
	 * = new FreqStack(); obj.push(x); int param_2 = obj.pop();
	 */
}
