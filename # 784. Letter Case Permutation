package com.leetcode.problems;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Question784 {
	class Solution {
		public List<String> letterCasePermutation(String S) {
			if (S == null || S.isEmpty()) {
				return new ArrayList<>();
			}
			Set<String> set = new HashSet<>();
			dfs(set, S.toCharArray(), 0);
			return new ArrayList<>(set);
		}

		private void dfs(Set<String> set, char[] arr, int i) {
			if (i >= arr.length) {
				StringBuilder sb = new StringBuilder();
				for (char c : arr) {
					sb.append(c);
				}
				set.add(sb.toString());
			} else {
				if (Character.isDigit(arr[i])) {
					dfs(set, arr, i + 1);
				} else if (Character.isUpperCase(arr[i])) {
					dfs(set, arr, i + 1);
					arr[i] = Character.toLowerCase(arr[i]);
					dfs(set, arr, i + 1);
				} else {
					dfs(set, arr, i + 1);
					arr[i] = Character.toUpperCase(arr[i]);
					dfs(set, arr, i + 1);
				}
			}
			return;
		}
	}
}
