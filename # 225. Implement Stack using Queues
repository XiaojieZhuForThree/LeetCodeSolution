# -*- coding: utf-8 -*-
"""
Created on Wed May  4 19:07:49 2022

@author: xiaoj
"""

class MyStack:

    def __init__(self):
        self.queue = []

    def push(self, x: int) -> None:
        self.queue.append(x)

    def pop(self) -> int:
        return self.queue.pop()

    def top(self) -> int:
        return self.queue[-1]

    def empty(self) -> bool:
        return len(self.queue) == 0


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()



#include <queue>

class MyStack {
public:
	std::queue<int> q;
	MyStack() {

	}

	void push(int x) {
		int size = std::size(q);
		q.push(x);
		for (int i = 0; i < size; i++) {
			q.push(q.front());
			q.pop();
		}
	}

	int pop() {
		int i = q.front();
		q.pop();
		return i;
	}

	int top() {
		return q.front();
	}

	bool empty() {
		return std::size(q) == 0;
	}
};
