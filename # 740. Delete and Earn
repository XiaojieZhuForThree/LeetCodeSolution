class Solution {
    public int deleteAndEarn(int[] nums) {
        
        int[] dp = new int[10002];
        int max = 0;
        for (int i : nums) {
            dp[i]++;
            max = Math.max(max, i);
        }
        for (int i = 2; i <= max; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + i * dp[i]);
        }
        return dp[max];
    }
}


class Solution:
    def deleteAndEarn(self, nums: List[int]) -> int:
        m = 0
        for i in nums:
            m = max(i, m)
        dp = [0 for i in range(m + 1)]
        max_vals = [0 for i in range(m + 1)]
        for i in nums:
            dp[i] += i
        for i in range(1, m + 1):
            val1 = dp[i] + (0 if i < 2 else max_vals[i - 2])
            val2 = dp[i - 1] + (0 if i - 3 < 0 else max_vals[i - 3])
            max_vals[i] = max(val1, val2)
        return max_vals[m]
