package problems;

public class Question985 {
	class Solution {
		public int[] sumEvenAfterQueries(int[] A, int[][] queries) {
			int cur = 0;
			for (int i : A) {
				if (i % 2 == 0) {
					cur += i;
				}
			}
			int[] ans = new int[queries.length];

			for (int i = 0; i < queries.length; i++) {
				int[] q = queries[i];
				int prev = A[q[1]], after = prev + q[0];
				if (prev % 2 == 0 && after % 2 == 0) {
					cur += q[0];
				} else if (prev % 2 == 0 && after % 2 != 0) {
					cur -= prev;
				} else if (prev % 2 != 0 && after % 2 == 0) {
					cur += after;
				}
				A[q[1]] = after;
				ans[i] = cur;
			}
			return ans;
		}
	}
}


#include <vector>

using namespace std;

class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {
        vector<int> ans;
        int sum = 0;
        for (int i : nums) {
            if (i % 2 == 0) sum += i;
        }
        for (auto q : queries) {
            int prev = nums[q[1]];
            int cur = prev + q[0];
            int prev_ab = abs(prev), cur_ab = abs(cur);
            if (prev_ab % 2 == 0 && cur_ab % 2 == 0) sum += q[0];
            else if (prev_ab % 2 == 0 && cur_ab % 2 == 1) sum -= prev;
            else if (prev_ab % 2 == 1 && cur_ab % 2 == 0) sum += cur;
            nums[q[1]] = cur;
            ans.push_back(sum);
        }
        return ans;
    }
};
