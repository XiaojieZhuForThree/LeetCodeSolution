class Solution:
    class TrieNode:
        def __init__(self):
            self.zero = None
            self.one = None
            
    def findMaximumXOR(self, nums: List[int]) -> int:
        root = self.TrieNode()
        for i in nums:
            node = root
            for j in range(31, -1, -1):
                if i & (1 << j):
                    if not node.one:
                        node.one = self.TrieNode()
                    node = node.one
                else:
                    if not node.zero:
                        node.zero = self.TrieNode()
                    node = node.zero
        ans = 0
        for i in nums:
            node = root
            cur = 0
            for j in range(31, -1, -1):
                flag = i & (1 << j)
                if node.zero and node.one:
                    if flag:
                        node = node.zero
                    else:
                        node = node.one
                    cur += (1 << j)
                else:
                    if (flag and node.zero) or (not flag and node.one):
                        cur += (1 << j)
                    node = node.one or node.zero
            ans = max(ans, cur)
        return ans
