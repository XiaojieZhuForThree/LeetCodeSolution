package com.leetcode.problems;

public class Question1359 {
	class Solution {
		int mod = 1000000007;

		public int countOrders(int n) {
			return (int) calculatePerm(n);
		}

		private final long calculatePerm(int n) {
			if (n == 1) {
				return 1;
			}
			long prevCount = countOrders(n - 1);
			int base = sum(2 * n - 1);
			return (prevCount * base) % mod;
		}

		private final int sum(int n) {
			return n * (n + 1) / 2;
		}
	}
}


class Solution:
    def countOrders(self, n: int) -> int:
        if n == 1:
            return 1
        prev = self.countOrders(n - 1)
        return prev * (self.get_sum(2 * n - 1)) % 1_000_000_007
    
    def get_sum(self, n):
        return (1 + n) * n // 2
