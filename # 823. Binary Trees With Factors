package com.leetcode.problems;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Question823 {
	class Solution {
		public int numFactoredBinaryTrees(int[] arr) {
			Map<Integer, Long> map = new HashMap<>();
			long ans = 0;
			for (int i : arr) {
				map.put(i, 1L);
				ans += 1;
			}	
			Arrays.sort(arr);
			for (int i : arr) {
				for (int j = 2; j * j <= i; j++) {
					if (i % j != 0 || !map.containsKey(j)) {
						continue;
					}
					int k = i / j;
					if (!map.containsKey(k)) {
						continue;
					}
					long val = map.get(j) * map.get(k);
					if (k != j) {
						val *= 2;
					}
					ans += val;
					map.put(i, map.get(i) + val);
				}
			}
			return (int) (ans % 1000000007);
		}
	}
}
