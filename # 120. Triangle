package com.leetcode.problems;

import java.util.List;

public class Question120 {
	class Solution {
		public int minimumTotal(List<List<Integer>> triangle) {
			for (int i = 1; i < triangle.size(); i++) {
				for (int j = 0; j < triangle.get(i).size(); j++) {
					int val = j < triangle.get(i - 1).size() ? triangle.get(i - 1).get(j)
							: triangle.get(i - 1).get(j - 1);
					if (j > 0) {
						val = Math.min(val, triangle.get(i - 1).get(j - 1));
					}
					triangle.get(i).set(j, val + triangle.get(i).get(j));
				}
			}
			int ans = Integer.MAX_VALUE;
			for (int i : triangle.get(triangle.size() - 1)) {
				ans = Math.min(ans, i);
			}
			return ans;
		}
	}
}


from typing import List


class Solution:
    def minimumTotal(self, triangle: List[List[int]]) -> int:
        for i in range(1, len(triangle)):
            for j in range(len(triangle[i])):
                if j >= i:
                    triangle[i][j] += triangle[i - 1][j - 1]
                elif j - 1 < 0:
                    triangle[i][j] += triangle[i - 1][j]
                else:
                    triangle[i][j] += min(triangle[i - 1][j - 1], triangle[i - 1][j])
        return min(triangle[len(triangle) - 1])
