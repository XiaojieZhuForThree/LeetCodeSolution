package problems;

public class Question1139 {
	class Solution {
		public int largest1BorderedSquare(int[][] grid) {
			int m = grid.length, n = grid[0].length;
			int[][] hori = new int[m][n], vert = new int[m][n];
			for (int i = 0; i < m; i++) {
				for (int j = 0; j < n; j++) {
					if (grid[i][j] == 1) {
						hori[i][j] = j > 0 ? hori[i][j - 1] + 1 : 1;
						vert[i][j] = i > 0 ? vert[i - 1][j] + 1 : 1;
					}
				}
			}
			for (int l = Math.min(m, n); l > 0; l--) {
				for (int i = 0; i + l - 1 < m; i++) {
					for (int j = 0; j + l - 1 < n; j++) {
						if (hori[i][j + l - 1] >= l && hori[i + l - 1][j + l - 1] >= l && vert[i + l - 1][j] >= l
								&& vert[i + l - 1][j + l - 1] >= l) {
							return l * l;
						}
					}
				}
			}
			return 0;
		}
	}
}
