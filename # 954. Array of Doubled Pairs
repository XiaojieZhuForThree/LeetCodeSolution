package com.leetcode.problems;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Question954 {
	class Solution {
		public boolean canReorderDoubled(int[] arr) {
			if (arr == null || arr.length % 2 == 1)
				return false;
			Arrays.sort(arr);
			Map<Integer, Integer> map = new HashMap<>();
			for (int i : arr) {
				if (i < 0) {
					int i2 = i * 2;
					if (map.containsKey(i2)) {
						int rem = map.get(i2);
						if (rem == 1)
							map.remove(i2);
						else
							map.put(i2, rem - 1);
					} else
						map.put(i, map.getOrDefault(i, 0) + 1);
				} else {
					if (i % 2 == 1)
						map.put(i, map.getOrDefault(i, 0) + 1);
					else {
						int iHalf = i / 2;
						if (map.containsKey(iHalf)) {
							int rem = map.get(iHalf);
							if (rem == 1)
								map.remove(iHalf);
							else
								map.put(iHalf, rem - 1);
						} else
							map.put(i, map.getOrDefault(i, 0) + 1);
					}
				}
			}
			return map.isEmpty();
		}
	}
}
