package problems;

import java.util.ArrayDeque;
import java.util.Deque;

public class Question907 {
	class Solution {
		public int sumSubarrayMins(int[] A) {
			int n = A.length;
			int[] left = new int[n], right = new int[n];
			Deque<Integer> deque = new ArrayDeque<>();
			for (int i = 0; i < n; i++) {
				while (!deque.isEmpty() && A[deque.peekLast()] >= A[i]) {
					deque.pollLast();
				}
				left[i] = deque.isEmpty() ? i + 1 : i - deque.peekLast();
				deque.offer(i);
			}
			deque.clear();
			for (int i = n - 1; i >= 0; i--) {
				while (!deque.isEmpty() && A[deque.peekLast()] > A[i]) {
					deque.pollLast();
				}
				right[i] = deque.isEmpty() ? n - i : deque.peekLast() - i;
				deque.offer(i);
			}
			int ans = 0, mod = (int) (1e9 + 7);
			for (int i = 0; i < n; i++) {
				ans += (A[i] * left[i] * right[i]) % mod;
				ans %= mod;
			}
			return ans;
		}
	}
}
