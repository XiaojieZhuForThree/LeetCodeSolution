package com.leetcode.problems;

import com.leetcode.api.ListNode;

public class Question160 {
	public class Solution {
		public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
			if (headA == null || headB == null) {
				return null;
			}
			int lenA = getLength(headA), lenB = getLength(headB);
			if (lenA > lenB) {
				for (; lenB < lenA; lenB++) {
					headA = headA.next;
				}
			} else {
				for (; lenA < lenB; lenA++) {
					headB = headB.next;
				}
			}
			while (headA != null) {
				if (headA == headB) {
					return headA;
				}
				headA = headA.next;
				headB = headB.next;
			}
			return null;
		}

		private int getLength(ListNode node) {
			if (node == null) {
				return 0;
			}
			return 1 + getLength(node.next);
		}
	}
}
