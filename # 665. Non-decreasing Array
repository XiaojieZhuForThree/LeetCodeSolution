package com.leetcode.problems;

public class Question665 {
	class Solution {
		public boolean checkPossibility(int[] nums) {
			boolean changed = false;

			for (int i = 1; i < nums.length; i++) {
				if (nums[i] >= nums[i - 1]) {
					continue;
				} else if (changed) {
					return false;
				} else {
					if (i - 2 >= 0) {
						if (nums[i] >= nums[i - 2]) {
							nums[i - 1] = nums[i - 2];
							changed = true;
						} else {
							nums[i] = nums[i - 1];
							changed = true;
						}
					} else {
						nums[i - 1] = Integer.MIN_VALUE;
						changed = true;
					}
				}
			}
			return true;
		}
	}
}


from typing import List


class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        moved = False
        for i in range(1, len(nums)):
            if nums[i] >= nums[i - 1]:
                continue
            elif moved:
                return False
            else:
                if i == 1 or nums[i] >= nums[i - 2]:
                    moved = True
                else:
                    nums[i] = nums[i - 1]
                    moved = True
        return True
