package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;

public class Question54 {
	class Solution {
		public List<Integer> spiralOrder(int[][] matrix) {
			if (matrix == null || matrix.length == 0 || matrix[0].length == 0)
				return List.of();
			int m = matrix.length, n = matrix[0].length;
			int l = 0, r = n - 1, u = 0, d = m - 1;
			List<Integer> ans = new ArrayList<>();
			while (l <= r && u <= d) {
				for (int i = l; i <= r; i++)
					ans.add(matrix[u][i]);
				for (int i = u + 1; i <= d; i++)
					ans.add(matrix[i][r]);
				if (d > u) {
					for (int i = r - 1; i >= l; i--)
						ans.add(matrix[d][i]);
				}
				if (l < r) {
					for (int i = d - 1; i > u; i--)
						ans.add(matrix[i][l]);
				}
				l++;
				r--;
				u++;
				d--;
			}
			return ans;
		}
	}
}
