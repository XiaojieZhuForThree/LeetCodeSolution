package problems;

public class Question1406 {
	class Solution {
		public String stoneGameIII(int[] stoneValue) {
			int n = stoneValue.length;
			int[] dp = new int[n + 1];
			for (int i = n - 1; i >= 0; i--) {
				dp[i] = Integer.MIN_VALUE;
				for (int k = 0, take = 0; k < 3 & i + k < n; k++) {
					take += stoneValue[i + k];
					dp[i] = Math.max(dp[i], take - dp[i + k + 1]);
				}
			}
			if (dp[0] > 0) {
				return "Alice";
			}
			if (dp[0] < 0) {
				return "Bob";
			}
			return "Tie";
		}
	}
}


#include <string>
#include <vector>
using namespace std;

class Solution {
public:
    string stoneGameIII(vector<int>& stoneValue) {
        int n = size(stoneValue);
        vector<int> dp(n + 1, 0);
        for (int i = n - 1; i >= 0; i--) {
            dp[i] = INT_MIN;
            for (int k = 0, take = 0; k < 3 & i + k < n; k++) {
                take += stoneValue[i + k];
                dp[i] = max(dp[i], take - dp[i + k + 1]);
            }
        }
        if (dp[0] > 0) {
            return "Alice";
        }
        if (dp[0] < 0) {
            return "Bob";
        }
        return "Tie";
    }
};
