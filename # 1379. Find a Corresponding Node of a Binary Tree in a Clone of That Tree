package com.leetcode.problems;

import com.leetcode.api.TreeNode;

public class Question1379 {
	class Solution {
		public final TreeNode getTargetCopy(final TreeNode original, final TreeNode cloned, final TreeNode target) {
			if (cloned == null) {
				return null;
			}
			if (cloned.val == target.val) {
				return cloned;
			}
			TreeNode left = getTargetCopy(original, cloned.left, target);
			if (left != null) {
				return left;
			}
			return getTargetCopy(original, cloned.right, target);
		}
	}
}


# -*- coding: utf-8 -*-
"""
Created on Mon May 16 19:11:25 2022

@author: xiaoj
"""

# Definition for a binary tree node.
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution:
    def getTargetCopy(self, original: TreeNode, cloned: TreeNode, target: TreeNode) -> TreeNode:
        if not (original and cloned and target):
            return None
        if original == target:
            return cloned
        ans = self.getTargetCopy(original.left, cloned.left, target)
        if not ans:
            ans = self.getTargetCopy(original.right, cloned.right, target)
        return ans
