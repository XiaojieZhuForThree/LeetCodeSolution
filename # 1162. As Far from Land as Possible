package problems;

import java.util.LinkedList;
import java.util.Queue;

public class Question1162 {
	class Solution {
		public int maxDistance(int[][] grid) {
			int n = grid.length;
			boolean[][] visited = new boolean[n][n];
			Queue<int[]> queue = new LinkedList<>();
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (grid[i][j] == 1) {
						visited[i][j] = true;
						queue.offer(new int[] { i, j });
					}
				}
			}
			int ans = 0;
			queue.offer(null);
			int[][] dirs = new int[][] { { 1, 0 }, { -1, 0 }, { 0, 1 }, { 0, -1 } };
			while (!queue.isEmpty()) {
				int[] cur = queue.poll();
				if (cur == null) {
					if (!queue.isEmpty()) {
						ans++;
						queue.offer(null);
					}
					continue;
				}
				for (int[] dir : dirs) {
					int nx = cur[0] + dir[0], ny = cur[1] + dir[1];
					if (nx >= 0 && nx < n && ny >= 0 && ny < n && !visited[nx][ny]) {
						visited[nx][ny] = true;
						queue.offer(new int[] { nx, ny });
					}
				}
			}
			return ans == 0 ? -1 : ans;
		}
	}
}
