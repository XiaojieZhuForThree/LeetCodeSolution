package com.leetcode.problems;

public class Question849 {
	class Solution {
		public int maxDistToClosest(int[] seats) {
			int[] dis = new int[seats.length];
			int onePos = -1;
			for (int i = 0; i < seats.length; i++) {
				if (seats[i] == 1) {
					onePos = i;
				} else {
					if (onePos == -1) {
						dis[i] = Integer.MAX_VALUE;
					} else {
						dis[i] = i - onePos;
					}
				}
			}
			onePos = seats.length;
			for (int i = seats.length - 1; i >= 0; i--) {
				if (seats[i] == 1) {
					onePos = i;
				} else {
					if (onePos == seats.length) {
						dis[i] = Math.min(dis[i], Integer.MAX_VALUE);
					} else {
						dis[i] = Math.min(dis[i], onePos - i);
					}
				}
			}
			int max = -1;
			for (int i = 0; i < seats.length; i++) {
				if (seats[i] == 0) {
					max = Math.max(max, dis[i]);
				}
			}
			return max;
		}
	}
}
