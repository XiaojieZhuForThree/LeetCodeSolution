package com.leetcode.problems;

public class Question859 {
	class Solution {
		public boolean buddyStrings(String A, String B) {
			if (A.length() != B.length()) {
				return false;
			}
			int diff = 0;
			int[] cntsA = new int[26], cntsB = new int[26];
			boolean hasDuplicate = false;
			for (int i = 0; i < A.length(); i++) {
				if (A.charAt(i) != B.charAt(i)) {
					diff++;
				}
				cntsA[A.charAt(i) - 'a']++;
				cntsB[B.charAt(i) - 'a']++;
				if (cntsA[A.charAt(i) - 'a'] > 1) {
					hasDuplicate = true;
				}
			}
			for (int i = 0; i < 26; i++) {
				if (cntsA[i] != cntsB[i]) {
					return false;
				}
			}
			if (diff == 2) {
				return true;
			}
			if (diff == 0 && hasDuplicate) {
				return true;
			}
			return false;
		}
	}
}
