package com.leetcode.problems;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Question1492 {
	class Solution1 {
		public int kthFactor(int n, int k) {
			int num = 0;
			for (int i = 1; i <= n; i++) {
				if (n % i == 0) {
					num++;
				}
				if (num == k) {
					return i;
				}
			}
			return -1;
		}
	}

	class Solution2 {
		public int kthFactor(int n, int k) {
			List<Integer> factors = new ArrayList<>();
			for (int i = 1; i * i <= n; i++) {
				if (n % i == 0) {
					factors.add(i);
					if (n / i != i) {
						factors.add(n / i);
					}
				}
			}
			Collections.sort(factors);
			return factors.size() >= k ? factors.get(k - 1) : -1;
		}
	}
}
