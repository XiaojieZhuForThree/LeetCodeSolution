class Solution {
    public String convert(String s, int numRows) {
        if (numRows == 1) {
            return s;
        }
        StringBuilder[] sbs = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            sbs[i] = new StringBuilder();
        }
        int pointer = 0;
        boolean up = true;
        for (char c : s.toCharArray()) {
            if (up) {
                sbs[pointer++].append(c); 
            } else {
                sbs[pointer--].append(c);
            }
            if (pointer == 0 || pointer == numRows - 1) {
                up = !up;
            }
        }
        StringBuilder sb = new StringBuilder();
        for (StringBuilder i : sbs) {
            sb.append(i);
        }
        return sb.toString();
    }
}


class Solution {
public:
    string convert(string s, int numRows) {
        if (numRows == 1) return s;
        bool down = true;
        int cnt = 0;
        vector<string> vec(numRows, "");
        for (char c : s) {
            vec[cnt] += c;
            if (down) cnt++;
            else cnt--;
            if (cnt == numRows - 1 || cnt == 0) down = !down;
        }
        string ans;
        for (string s : vec) ans.append(s);
        return ans;
    }
};
