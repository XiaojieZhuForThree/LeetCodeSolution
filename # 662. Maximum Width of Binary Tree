# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def widthOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        ans = 1
        queue = deque([(0, root)])
        while queue:
            ans = max(ans, queue[-1][0] - queue[0][0] + 1)
            for i in range(len(queue), 0, -1):
                pos, node = queue.popleft()
                if node.left:
                    queue.append((pos * 2, node.left))
                if node.right:
                    queue.append((pos * 2 + 1, node.right))
        return ans
