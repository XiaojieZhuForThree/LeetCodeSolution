package com.leetcode.problems;

import java.util.PriorityQueue;

public class Question1499 {
	class Solution {
		public int findMaxValueOfEquation(int[][] points, int k) {
			PriorityQueue<Integer> pq = new PriorityQueue<>(
					(a, b) -> (points[b][1] - points[b][0]) - (points[a][1] - points[a][0]));
			pq.offer(0);
			int ans = Integer.MIN_VALUE;
			for (int i = 1; i < points.length; i++) {
				while (!pq.isEmpty() && points[i][0] - points[pq.peek()][0] > k) {
					pq.poll();
				}
				if (pq.isEmpty()) {
					pq.offer(i);
					continue;
				}
				ans = Math.max(ans, points[i][0] + points[i][1] + points[pq.peek()][1] - points[pq.peek()][0]);
				pq.offer(i);
			}
			return ans;
		}
	}
}
