package com.leetcode.problems;

import java.util.HashMap;
import java.util.Map;

public class Question923 {
	class Solution {
		public int threeSumMulti(int[] arr, int target) {
			Map<Integer, Integer> counts = new HashMap<>();
			counts.put(arr[0] + arr[1], 1);
			long ans = 0;
			for (int i = 2; i < arr.length; i++) {
				ans += counts.getOrDefault(target - arr[i], 0);
				for (int j = 0; j < i; j++) {
					counts.put(arr[i] + arr[j], counts.getOrDefault(arr[i] + arr[j], 0) + 1);
				}
			}
			return (int) (ans % 1000000007);
		}
	}
}


class Solution:
    def threeSumMulti(self, arr: List[int], target: int) -> int:
        ref = [0 for i in range(0, 301)]
        ans = 0
        for i in range(1, len(arr)):
            if target - arr[i] >= 0:
                ans += ref[target - arr[i]]
                ans %= 1000000007
            for j in range(0, i):
                ref[arr[i] + arr[j]] += 1
        return ans
