package com.leetcode.problems;

public class Question647 {
	class Solution {
		public int countSubstrings(String s) {
			int ans = 0;
			for (int i = 0; i < s.length(); i++) {
				ans += getPal(s, i, i);
				ans += getPal(s, i, i + 1);
			}
			return ans;
		}

		private int getPal(String s, int l, int r) {
			int ans = 0;
			while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {
				ans++;
				l--;
				r++;
			}
			return ans;
		}
	}
}


class Solution:
    def countSubstrings(self, s: str) -> int:
        if not s:
            return 0
        ans = 0
        for i in range(len(s)):
            ans += self.getCounts(s, i, i) + self.getCounts(s, i-1, i)
        return ans
    
    def getCounts(self, s, i, j):
        ans = 0
        while i >= 0 and j < len(s) and s[i] == s[j]:
            ans += 1
            i -= 1
            j += 1
        return ans
            
