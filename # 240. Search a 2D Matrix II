package com.leetcode.problems;

import java.util.Arrays;

public class Question240 {
	class Solution1 {
	    public boolean searchMatrix(int[][] matrix, int target) {
	        for (int[] row : matrix) {
	            if (Arrays.binarySearch(row, target) >= 0) {
	                return true;
	            }
	        }
	        return false;
	    }
	}
	
	class Solution2 {
	    public boolean searchMatrix(int[][] matrix, int target) {
	        int col = matrix[0].length - 1, row = 0;
	        while (col >= 0 && row < matrix.length) {
	            if (matrix[row][col] == target) {
	                return true;
	            } else if (matrix[row][col] < target) {
	                row++;
	            } else {
	                col--;
	            }
	        }
	        return false;
	    }
	}
}


from typing import List


class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        m, n = len(matrix), len(matrix[0])
        i = 0
        j = n - 1
        while i < m and j >= 0:
            if matrix[i][j] == target:
                return True
            elif matrix[i][j] > target:
                j -= 1
            else:
                i += 1
        return False
