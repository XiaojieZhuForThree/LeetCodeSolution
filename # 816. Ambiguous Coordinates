package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;

public class Question816 {
	class Solution {
		public List<String> ambiguousCoordinates(String s) {
			s = s.substring(1, s.length() - 1);
			List<String> ans = new ArrayList<>();
			for (int i = 1; i < s.length(); i++) {
				List<String> left = getValidNum(s.substring(0, i));
				List<String> right = getValidNum(s.substring(i));
				for (String l : left) {
					for (String r : right) {
						ans.add("(" + l + ", " + r + ")");
					}
				}
			}
			return ans;
		}

		private List<String> getValidNum(String s) {
			List<String> ans = new ArrayList<>();
			if (s.charAt(0) == '0' && s.charAt(s.length() - 1) == '0') {
				if (s.length() == 1)
					ans.add(s);
				return ans;
			}
			if (s.charAt(s.length() - 1) == '0') {
				ans.add(s);
				return ans;
			}
			if (s.charAt(0) == '0') {
				ans.add("0" + "." + s.substring(1));
				return ans;
			}
			ans.add(s);
			for (int i = 1; i < s.length(); i++) {
				ans.add(s.substring(0, i) + "." + s.substring(i));
			}
			return ans;
		}
	}
}
