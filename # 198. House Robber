package problems;

public class Question198 {
	class Solution1 {
		public int rob(int[] nums) {
			if (nums == null || nums.length == 0) {
				return 0;
			}
			if (nums.length < 2) {
				return nums[0];
			}
			int[] dp = new int[nums.length];
			dp[0] = nums[0];
			dp[1] = Math.max(nums[0], nums[1]);
			for (int i = 2; i < nums.length; i++) {
				dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[i]);
			}
			int ans = 0;
			for (int i : dp) {
				ans = Math.max(i, ans);
			}
			return ans;
		}
	}

	class Solution2 {
		public int rob(int[] nums) {
			if (nums == null || nums.length == 0) {
				return 0;
			}
			int take = 0, noTake = 0;
			for (int i : nums) {
				int temp = noTake;
				noTake = Math.max(noTake, take);
				take = temp + i;
			}
			return Math.max(take, noTake);
		}
	}
}
