package com.leetcode.problems;

public class Question1031 {
	class Solution {
		public int maxSumTwoNoOverlap(int[] A, int L, int M) {
			return Math.max(helper(A, L, M), helper(A, M, L));
		}

		private int helper(int[] A, int L, int M) {
			int maxMVal = 0;
			int curL = 0, curM = 0;
			int maxSum = 0;
			for (int i = 0, j = 0, t = 0; j < A.length; j++) {
				curL += A[j];
				if (j - i + 1 > L) {
					curL -= A[i];
					curM += A[i];
					if (i - t + 1 > M) {
						curM -= A[t++];
					}
					maxMVal = Math.max(maxMVal, curM);
					i++;
				}
				maxSum = Math.max(maxSum, curL + maxMVal);
			}
			return maxSum;
		}
	}
}
