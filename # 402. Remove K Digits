class Solution {
    public String removeKdigits(String num, int k) {
        if (num == null || num.length() == 0) {
            return "0";
        }
        int digs = num.length() - k;
        char[] stack = new char[num.length()];
        int pos = 0;
        for (int i = 0; i < num.length(); i++) {
            char c = num.charAt(i);
            while (pos > 0 && stack[pos-1] > c && k > 0) {
                pos--;
                k--;
            }
            stack[pos++] = c;
        }
        int idx = 0;
        while (idx < digs && stack[idx] == '0') {
            idx++;
        }
        return idx == digs ? "0" : new String(stack, idx, digs-idx);
    }
}


class Solution:
    def removeKdigits(self, num: str, k: int) -> str:
        if not num or k >= len(num):
            return "0"
        ans = []
        t = k
        for i in num:
            while ans and ans[-1] > i and t > 0:
                ans.pop()
                t -= 1
            ans.append(i)
        for i in range(t):
            ans.pop()
            
        res = "".join(ans).lstrip('0')
        return '0' if not res else res
            
            
