package com.leetcode.problems;

import java.util.ArrayList;
import java.util.List;

public class Question119 {
	class Solution {
		public List<Integer> getRow(int rowIndex) {
			if (rowIndex == 0) {
				return List.of(1);
			}
			if (rowIndex == 1) {
				return List.of(1, 1);
			}
			List<Integer> ans = new ArrayList<>();
			ans.add(1);
			List<Integer> prevRow = getRow(rowIndex - 1);
			for (int i = 0; i < prevRow.size() - 1; i++) {
				ans.add(prevRow.get(i) + prevRow.get(i + 1));
			}
			ans.add(1);
			return ans;
		}
	}
}

#include <vector>
using std::vector;

class Solution {
public:
	vector<int> getRow(int rowIndex) {
		vector<int> row = { 1 };
		for (int i = 1; i <= rowIndex; i++) {
			vector<int> nxt;
			for (int j = 0; j <= i; j++) {
				int cur = 0;
				if (j < size(row)) cur += row[j];
				if (j > 0) cur += row[j - 1];
				nxt.push_back(cur);
			}
			row = nxt;
		}
		return row;
	}
};
