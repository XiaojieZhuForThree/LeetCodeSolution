class Solution {
    public int videoStitching(int[][] clips, int T) {
        int[][] dp = new int[T+1][T+1];
        for (int i = 0; i < T + 1; i++) {
            for (int j = 0; j < T + 1; j++) {
                dp[i][j] = Integer.MAX_VALUE;
            }
        }
        for (int[] i : clips) {
            int l = i[0], r = i[1];
            if (l > T || r < 0) {
                continue;
            }
            else {
                if (l < 0) {
                    l = 0;
                }
                if (r > T) {
                    r = T;
                }
                for (int m = l; m <= r; m++) {
                    for (int n = m; n <= r; n++) {
                        dp[m][n] = 1;
                    }
                }
                if (dp[0][l] != Integer.MAX_VALUE && dp[r][T] != Integer.MAX_VALUE) {
                    dp[0][T] = Math.min(dp[0][T], dp[0][l] + dp[r][T] + 1);
                }
                else if (dp[0][l] != Integer.MAX_VALUE) {
                    dp[0][r] = Math.min(dp[0][r], dp[0][l] + 1);
                }
                else if (dp[r][T] != Integer.MAX_VALUE) {
                    dp[l][T] = Math.min(dp[l][T], dp[r][T] + 1);
                }                
            }
        }
        return dp[0][T] == Integer.MAX_VALUE ? -1 : dp[0][T];
    }
}
