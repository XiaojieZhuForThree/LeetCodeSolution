class Solution {
    public boolean wordPattern(String pattern, String s) {
        if (pattern == null || pattern.length() == 0) return false;
        if (s == null || s.length() == 0) return false;
        String[] words = s.split(" ");
        if (words.length != pattern.length()) return false;
        Map<Character, String> map1 = new HashMap<>();
        Map<String, Character> map2 = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char key = pattern.charAt(i);
            if (map1.containsKey(key)) {
                if (!map1.get(key).equals(words[i])) return false;
            } else if (map2.containsKey(words[i])) {
                if (map2.get(words[i]) != key) return false;
            }else {
                map1.put(key, words[i]);
                map2.put(words[i], key);
            }
        }
        return true;
    }
}
