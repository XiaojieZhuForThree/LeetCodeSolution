package com.leetcode.problems;

import java.util.Arrays;

import com.leetcode.model.TreeNode;

public class Question105 {
	class Solution {
		public TreeNode buildTree(int[] preorder, int[] inorder) {
			if (preorder == null || preorder.length == 0)
				return null;
			if (preorder.length == 1)
				return new TreeNode(preorder[0]);
			TreeNode node = new TreeNode(preorder[0]);
			int i = 0;
			while (inorder[i] != preorder[0])
				i++;
			int[] leftPreorder = Arrays.copyOfRange(preorder, 1, i + 1);
			int[] rightPreorder = Arrays.copyOfRange(preorder, i + 1, preorder.length);
			int[] leftInorder = Arrays.copyOfRange(inorder, 0, i);
			int[] rightInorder = Arrays.copyOfRange(inorder, i + 1, inorder.length);
			node.left = buildTree(leftPreorder, leftInorder);
			node.right = buildTree(rightPreorder, rightInorder);
			return node;
		}
	}
}
