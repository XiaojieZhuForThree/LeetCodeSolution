#include <string>;
#include "TreeNode.cpp";

using namespace std;

class Solution {
public:
    string tree2str(TreeNode* root) {
        if (!root) return "";
        string ans = to_string(root->val);
        if (!root->left && !root->right) return ans;
        else if (!root->left) {
            ans.append("()");
            ans.append("(" + tree2str(root->right) + ")");
        }
        else if (!root->right) {
            ans.append("(" + tree2str(root->left) + ")");
        }
        else {
            ans.append("(" + tree2str(root->left) + ")");
            ans.append("(" + tree2str(root->right) + ")");
        }
        return ans;
    }
};


#include <string>;
#include "TreeNode.h";
#include <bitset>

using std::string;

class Solution {
public:
    string tree2str(TreeNode* root) {
        if (!root) return "";
        if (!root->left && !root->right) return std::to_string(root->val);
        if (!root->left) return std::to_string(root->val) + "()" + '(' + tree2str(root->right) + ')';
        if (!root->right) return std::to_string(root->val) + '(' + tree2str(root->left) + ')';
        return std::to_string(root->val) + '(' + tree2str(root->left) + ')' + '(' + tree2str(root->right) + ')';
    }
};
