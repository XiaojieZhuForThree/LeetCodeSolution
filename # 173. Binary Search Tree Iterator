/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
    Stack<TreeNode> smallests = new Stack<>();

    public void getIt(TreeNode root) {
    	while (root != null) {
    		smallests.push(root);
    		root = root.left;
    	}
    }
    public BSTIterator(TreeNode root) {
    	getIt(root);
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !smallests.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
    	TreeNode now = smallests.pop();
    	if (now.right != null) {
    		getIt(now.right);
    	}
    	return now.val;
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */
