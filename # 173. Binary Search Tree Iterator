// not finished yet, will fill the slots later after discrete class!

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
    TreeNode theRoot;
    Stack<TreeNode> smallests = new Stack<>();
    private getSeq(TreeNode root){
        
    }
    public BSTIterator(TreeNode root) {
        this.theRoot = root;        
        while (theRoot.left != null){
            stack.pop(theRoot.left);
            
        }
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        
    }

    /** @return the next smallest number */
    public int next() {
        
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */
