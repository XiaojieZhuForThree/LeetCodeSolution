package com.leetcode.problems;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Question299 {
	class Solution {
		public String getHint(String secret, String guess) {
			int bulls = 0, cows = 0;
			Map<Character, Integer> counts = getCharCounts(secret);
			Set<Integer> bullPositions = new HashSet<>();

			for (int i = 0; i < secret.length(); i++) {
				if (secret.charAt(i) == guess.charAt(i)) {
					char c = secret.charAt(i);
					bulls++;
					counts.put(c, counts.get(c) - 1);
					bullPositions.add(i);
				}
			}

			for (int i = 0; i < guess.length(); i++) {
				char c = guess.charAt(i);
				if (!bullPositions.contains(i) && counts.containsKey(c) && counts.get(c) > 0) {
					cows++;
					counts.put(c, counts.get(c) - 1);
				}
			}

			return formString(bulls, cows);
		}

		private final Map<Character, Integer> getCharCounts(String secret) {
			Map<Character, Integer> counts = new HashMap<>();
			for (char c : secret.toCharArray()) {
				counts.put(c, counts.getOrDefault(c, 0) + 1);
			}
			return counts;
		}

		private final String formString(int a, int b) {
			return a + "A" + b + "B";
		}
	}
}
