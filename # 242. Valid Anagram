package com.leetcode.problems;

public class Question242 {
	class Solution {
		public boolean isAnagram(String s, String t) {
			int[] counts = new int[26];
			for (char c : s.toCharArray()) {
				counts[c - 'a']++;
			}
			for (char c : t.toCharArray()) {
				counts[c - 'a']--;
			}
			for (int i : counts) {
				if (i != 0) {
					return false;
				}
			}
			return true;
		}
	}
}


class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        _map = {}
        for c in s:
            if c not in _map:
                _map[c] = 1
            else:
                _map[c] += 1
        for c in t:
            if c not in _map:
                return False
            _map[c] -= 1
            if _map[c] == 0:
                del _map[c]
        return not _map


#include <string>
#include <algorithm>
using std::string;

class Solution {
public:
    bool isAnagram(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        return s == t;
    }
};
