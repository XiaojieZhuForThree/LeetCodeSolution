package problems;

import java.util.HashSet;
import java.util.Set;

public class Question1496 {
	class Solution {
		public boolean isPathCrossing(String path) {
			Set<String> visited = new HashSet<>();
			int x = 0, y = 0;
			visited.add("0,0");
			for (char c : path.toCharArray()) {
				switch (c) {
				case 'N':
					y++;
					break;
				case 'S':
					y--;
					break;
				case 'E':
					x++;
					break;
				case 'W':
					x--;
					break;
				}
				String nP = x + "," + y;
				if (!visited.add(nP)) {
					return true;
				}
			}
			return false;
		}
	}
}


#include <string>
#include <unordered_map>
#include <unordered_set>
using std::string;

class Solution {
public:
    bool isPathCrossing(string path) {
        std::unordered_map<int, std::unordered_set<int>> visited;
        int x = 0, y = 0;
        visited[x].insert(y);
        for (char c : path) {
            if (c == 'N') y++;
            else if (c == 'S') y--;
            else if (c == 'E') x++;
            else x--;
            if (visited.count(x) && visited[x].count(y)) return true;
            visited[x].insert(y);
        }
        return false;
    }
};
