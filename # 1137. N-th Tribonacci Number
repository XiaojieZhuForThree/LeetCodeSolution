package com.leetcode.problems;

public class Question1137 {
	class Solution {
		public int tribonacci(int n) {
			if (n == 0)
				return 0;
			if (n == 1)
				return 1;
			if (n == 2)
				return 1;
			int[] prev = new int[] { 0, 1, 1 };
			for (int i = 3; i <= n; i++) {
				int t = prev[0], j = prev[1], k = prev[2];
				int ans = t + j + k;
				prev[0] = j;
				prev[1] = k;
				prev[2] = ans;
			}
			return prev[2];
		}
	}
}


#include <vector>
using namespace std;

class Solution {
public:
	int tribonacci(int n) {
		vector<int> ans{ 0, 1, 1 };
		for (int i = 3; i <= n; i++) ans.push_back(ans[i - 3] + ans[i - 2] + ans[i - 1]);
		return ans[n];
	}
};


#include <vector>

class Solution {
public:
    int tribonacci(int n) {
        if (n < 2) return n;
        if (n == 2) return 1;
        int v0 = 0, v1 = 1, v2 = 1;
        for (int i = 3; i <= n; i++) {
            int v3 = v0 + v1 + v2;
            v0 = v1;
            v1 = v2;
            v2 = v3;
        }
        return v2;
    }
};
