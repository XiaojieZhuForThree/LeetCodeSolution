package com.leetcode.problems;

import java.util.HashMap;
import java.util.Map;

public class Question1396 {
	class UndergroundSystem {
		Map<String, Integer> durations;
		Map<String, Integer> times;
		Map<Integer, String> checkIns;
		Map<Integer, Integer> startTime;

		public UndergroundSystem() {
			durations = new HashMap<>();
			times = new HashMap<>();
			checkIns = new HashMap<>();
			startTime = new HashMap<>();
		}

		public void checkIn(int id, String stationName, int t) {
			checkIns.put(id, stationName);
			startTime.put(id, t);
		}

		public void checkOut(int id, String stationName, int t) {
			int start = startTime.get(id);
			int duration = t - start;
			String trip = checkIns.get(id) + "->" + stationName;
			durations.put(trip, durations.getOrDefault(trip, 0) + duration);
			times.put(trip, times.getOrDefault(trip, 0) + 1);
		}

		public double getAverageTime(String startStation, String endStation) {
			String trip = startStation + "->" + endStation;
			int duration = durations.get(trip);
			int time = times.get(trip);
			return (double) duration / time;
		}
	}

	/**
	 * Your UndergroundSystem object will be instantiated and called as such:
	 * UndergroundSystem obj = new UndergroundSystem();
	 * obj.checkIn(id,stationName,t); obj.checkOut(id,stationName,t); double param_3
	 * = obj.getAverageTime(startStation,endStation);
	 */
}


# -*- coding: utf-8 -*-
"""
Created on Sat Apr 23 19:58:21 2022

@author: xiaoj
"""

class UndergroundSystem:

    def __init__(self):
        self.ave = {}
        self.p2i = {}

    def checkIn(self, id: int, stationName: str, t: int) -> None:
        self.p2i[id] = (stationName, t)

    def checkOut(self, id: int, stationName: str, t: int) -> None:
        prev = self.p2i[id]
        key = prev[0] + '-' + stationName
        if key not in self.ave:
            self.ave[key] = (t - prev[1], 1)
        else:
            self.ave[key] = (t - prev[1] + self.ave[key][0], 1 + self.ave[key][1])

    def getAverageTime(self, startStation: str, endStation: str) -> float:
        key = startStation + '-' + endStation
        return self.ave[key][0] / self.ave[key][1]


# Your UndergroundSystem object will be instantiated and called as such:
# obj = UndergroundSystem()
# obj.checkIn(id,stationName,t)
# obj.checkOut(id,stationName,t)
# param_3 = obj.getAverageTime(startStation,endStation)
