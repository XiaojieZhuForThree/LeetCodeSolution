#include <string>
#include <vector>
#include <unordered_map>

using namespace std;

class Solution {
public:
	int numWays(vector<string>& words, string target) {
		int m = size(target), n = size(words[0]);
		vector<vector<long long>> dp(m, vector<long long>(n + 1, 0));

		unordered_map<int, unordered_map<char, int>> locs;
		for (auto& w : words) {
			for (int i = 0; i < n; i++) locs[i][w[i]]++;
		}
		for (int i = 1; i <= n; i++) dp[0][i] = dp[0][i - 1] + locs[i - 1][target[0]];
		for (int i = 1; i < m; i++) {
			long long vals = 0;
			for (int j = 1; j <= n; j++) {
				int mult = locs[j - 1][target[i]];
				vals += mult * dp[i - 1][j - 1];
				vals %= 1000000007;
				dp[i][j] = vals;
			}
		}
		return dp[m - 1][n];
	}
};
